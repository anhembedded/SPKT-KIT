D G "__PCH__" 0 118 ""5.101""
D G "__DEVICE__" 0 118 "6722"
D G "__DATE__" 0 118 ""21-Mar-22""
D G "__TIME__" 0 118 ""10:52:34""
D G "_UNICODE" 0 118 ""?""
D G "__EVAL" 0 118 ""?"" "Standard Header file for the PIC18F6722 device ////////////////"
c L "set_tris_a" 2 3 6 "FUNCTION"
F N "set_tris_a" 2 43 ""
V L "value" 2 43 "int8" `55 
F B "set_tris_a" 2 43 "void(int8 value)" `54 
F N "set_tris_b" 2 44 ""
V L "value" 2 44 "int8" `57 
F B "set_tris_b" 2 44 "void(int8 value)" `56 
F N "set_tris_c" 2 45 ""
V L "value" 2 45 "int8" `59 
F B "set_tris_c" 2 45 "void(int8 value)" `58 
F N "set_tris_d" 2 46 ""
V L "value" 2 46 "int8" `61 
F B "set_tris_d" 2 46 "void(int8 value)" `60 
F N "set_tris_e" 2 47 ""
V L "value" 2 47 "int8" `63 
F B "set_tris_e" 2 47 "void(int8 value)" `62 
F N "set_tris_f" 2 48 ""
V L "value" 2 48 "int8" `65 
F B "set_tris_f" 2 48 "void(int8 value)" `64 
F N "set_tris_g" 2 49 ""
V L "value" 2 49 "int8" `67 
F B "set_tris_g" 2 49 "void(int8 value)" `66 
F N "get_tris_a" 2 50 ""
F B "get_tris_a" 2 50 "int8()" `68 
F N "get_tris_b" 2 51 ""
F B "get_tris_b" 2 51 "int8()" `69 
F N "get_tris_c" 2 52 ""
F B "get_tris_c" 2 52 "int8()" `70 
F N "get_tris_d" 2 53 ""
F B "get_tris_d" 2 53 "int8()" `71 
F N "get_tris_e" 2 54 ""
F B "get_tris_e" 2 54 "int8()" `72 
F N "get_tris_f" 2 55 ""
F B "get_tris_f" 2 55 "int8()" `73 
F N "get_tris_g" 2 56 ""
F B "get_tris_g" 2 56 "int8()" `74 
F N "output_a" 2 57 ""
V L "value" 2 57 "int8" `76 
F B "output_a" 2 57 "void(int8 value)" `75 
F N "output_b" 2 58 ""
V L "value" 2 58 "int8" `78 
F B "output_b" 2 58 "void(int8 value)" `77 
F N "output_c" 2 59 ""
V L "value" 2 59 "int8" `80 
F B "output_c" 2 59 "void(int8 value)" `79 
F N "output_d" 2 60 ""
V L "value" 2 60 "int8" `82 
F B "output_d" 2 60 "void(int8 value)" `81 
F N "output_e" 2 61 ""
V L "value" 2 61 "int8" `84 
F B "output_e" 2 61 "void(int8 value)" `83 
F N "output_f" 2 62 ""
V L "value" 2 62 "int8" `86 
F B "output_f" 2 62 "void(int8 value)" `85 
F N "output_g" 2 63 ""
V L "value" 2 63 "int8" `88 
F B "output_g" 2 63 "void(int8 value)" `87 
F N "input_a" 2 64 ""
F B "input_a" 2 64 "int8()" `89 
F N "input_b" 2 65 ""
F B "input_b" 2 65 "int8()" `90 
F N "input_c" 2 66 ""
F B "input_c" 2 66 "int8()" `91 
F N "input_d" 2 67 ""
F B "input_d" 2 67 "int8()" `92 
F N "input_e" 2 68 ""
F B "input_e" 2 68 "int8()" `93 
F N "input_f" 2 69 ""
F B "input_f" 2 69 "int8()" `94 
F N "input_g" 2 70 ""
F B "input_g" 2 70 "int8()" `95 
F N "input_change_a" 2 71 ""
F B "input_change_a" 2 71 "int8()" `96 
F N "input_change_b" 2 72 ""
F B "input_change_b" 2 72 "int8()" `97 
F N "input_change_c" 2 73 ""
F B "input_change_c" 2 73 "int8()" `98 
F N "input_change_d" 2 74 ""
F B "input_change_d" 2 74 "int8()" `99 
F N "input_change_e" 2 75 ""
F B "input_change_e" 2 75 "int8()" `100 
F N "input_change_f" 2 76 ""
F B "input_change_f" 2 76 "int8()" `101 
F N "input_change_g" 2 77 ""
F B "input_change_g" 2 77 "int8()" `102 
F N "port_b_pullups" 2 78 ""
V L "value" 2 78 "int8" `104 
F B "port_b_pullups" 2 78 "void(int8 value)" `103 
F N "input" 2 79 ""
V L "pin" 2 79 "int16" `106 
F B "input" 2 79 "int8(int16 pin)" `105 
F N "input_state" 2 80 ""
V L "pin" 2 80 "int16" `108 
F B "input_state" 2 80 "int8(int16 pin)" `107 
F N "output_low" 2 81 ""
V L "pin" 2 81 "int16" `110 
F B "output_low" 2 81 "void(int16 pin)" `109 
F N "output_high" 2 82 ""
V L "pin" 2 82 "int16" `112 
F B "output_high" 2 82 "void(int16 pin)" `111 
F N "output_toggle" 2 83 ""
V L "pin" 2 83 "int16" `114 
F B "output_toggle" 2 83 "void(int16 pin)" `113 
F N "output_bit" 2 84 ""
V L "pin" 2 84 "int16" `116 
V L "level" 2 84 "int8" `117 
F B "output_bit" 2 84 "void(int16 pin,int8 level)" `115 
F N "output_float" 2 85 ""
V L "pin" 2 85 "int16" `119 
F B "output_float" 2 85 "void(int16 pin)" `118 
F N "output_drive" 2 86 ""
V L "pin" 2 86 "int16" `121 
F B "output_drive" 2 86 "void(int16 pin)" `120  "Constants used to identify pins in the above are:"
D G "PIN_A0" 2 90 "31744"
D G "PIN_A1" 2 91 "31745"
D G "PIN_A2" 2 92 "31746"
D G "PIN_A3" 2 93 "31747"
D G "PIN_A4" 2 94 "31748"
D G "PIN_A5" 2 95 "31749"
D G "PIN_A6" 2 96 "31750"
D G "PIN_A7" 2 97 "31751"
D G "PIN_B0" 2 99 "31752"
D G "PIN_B1" 2 100 "31753"
D G "PIN_B2" 2 101 "31754"
D G "PIN_B3" 2 102 "31755"
D G "PIN_B4" 2 103 "31756"
D G "PIN_B5" 2 104 "31757"
D G "PIN_B6" 2 105 "31758"
D G "PIN_B7" 2 106 "31759"
D G "PIN_C0" 2 108 "31760"
D G "PIN_C1" 2 109 "31761"
D G "PIN_C2" 2 110 "31762"
D G "PIN_C3" 2 111 "31763"
D G "PIN_C4" 2 112 "31764"
D G "PIN_C5" 2 113 "31765"
D G "PIN_C6" 2 114 "31766"
D G "PIN_C7" 2 115 "31767"
D G "PIN_D0" 2 117 "31768"
D G "PIN_D1" 2 118 "31769"
D G "PIN_D2" 2 119 "31770"
D G "PIN_D3" 2 120 "31771"
D G "PIN_D4" 2 121 "31772"
D G "PIN_D5" 2 122 "31773"
D G "PIN_D6" 2 123 "31774"
D G "PIN_D7" 2 124 "31775"
D G "PIN_E0" 2 126 "31776"
D G "PIN_E1" 2 127 "31777"
D G "PIN_E2" 2 128 "31778"
D G "PIN_E3" 2 129 "31779"
D G "PIN_E4" 2 130 "31780"
D G "PIN_E5" 2 131 "31781"
D G "PIN_E6" 2 132 "31782"
D G "PIN_E7" 2 133 "31783"
D G "PIN_F0" 2 135 "31784"
D G "PIN_F1" 2 136 "31785"
D G "PIN_F2" 2 137 "31786"
D G "PIN_F3" 2 138 "31787"
D G "PIN_F4" 2 139 "31788"
D G "PIN_F5" 2 140 "31789"
D G "PIN_F6" 2 141 "31790"
D G "PIN_F7" 2 142 "31791"
D G "PIN_G0" 2 144 "31792"
D G "PIN_G1" 2 145 "31793"
D G "PIN_G2" 2 146 "31794"
D G "PIN_G3" 2 147 "31795"
D G "PIN_G4" 2 148 "31796"
D G "PIN_G5" 2 149 "31797"
D G "FALSE" 2 152 "0"
D G "TRUE" 2 153 "1"
D G "BYTE" 2 155 "int8"
D G "BOOLEAN" 2 156 "int1"
D G "getc" 2 158 "getch"
D G "fgetc" 2 159 "getch"
D G "getchar" 2 160 "getch"
D G "putc" 2 161 "putchar"
D G "fputc" 2 162 "putchar"
D G "fgets" 2 163 "gets"
D G "fputs" 2 164 "puts"
c L "output_drive" 2 3 3 "FUNCTION"
F N "restart_cause" 2 169 ""
F B "restart_cause" 2 169 "int8()" `122 
F N "reset_cpu" 2 170 ""
F B "reset_cpu" 2 170 "void()" `123 
F N "sleep" 2 171 ""
F B "sleep" 2 171 "void()" `124 
F N "sleep" 2 172 ""
V L "type" 2 172 "int8" `126 
F B "sleep" 2 172 "void(int8 type)" `125  "Constants returned from RESTART_CAUSE() are:"
D G "WDT_TIMEOUT" 2 174 "7"
D G "MCLR_FROM_SLEEP" 2 175 "11"
D G "MCLR_FROM_RUN" 2 176 "15"
D G "NORMAL_POWER_UP" 2 177 "12"
D G "BROWNOUT_RESTART" 2 178 "14"
D G "WDT_FROM_SLEEP" 2 179 "3"
D G "RESET_INSTRUCTION" 2 180 "0"
D G "SLEEP_FULL" 2 183 "0" "Default"
D G "SLEEP_IDLE" 2 184 "1" "Clock and peripherals don't stop"
c L "sleep" 2 3 5 "FUNCTION"
F N "setup_timer_0" 2 191 ""
V L "mode" 2 191 "int8" `128 
F B "setup_timer_0" 2 191 "void(int8 mode)" `127 
F N "set_timer0" 2 192 ""
V L "value" 2 192 "int16" `130 
F B "set_timer0" 2 192 "void(int16 value)" `129 
F N "get_timer0" 2 193 ""
F B "get_timer0" 2 193 "int16()" `131 
F N "setup_counters" 2 194 ""
V L "mode" 2 194 "int8" `133 
V L "prescaler" 2 194 "int8" `134 
F B "setup_counters" 2 194 "void(int8 mode,int8 prescaler)" `132 
F N "set_rtcc" 2 195 ""
V L "value" 2 195 "int16" `136 
F B "set_rtcc" 2 195 "void(int16 value)" `135 
F N "get_rtcc" 2 196 ""
F B "get_rtcc" 2 196 "int16()" `137  "Constants used for SETUP_TIMER_0() are:"
D G "T0_INTERNAL" 2 198 "0"
D G "T0_EXT_L_TO_H" 2 199 "32"
D G "T0_EXT_H_TO_L" 2 200 "48"
D G "T0_DIV_1" 2 202 "8"
D G "T0_DIV_2" 2 203 "0"
D G "T0_DIV_4" 2 204 "1"
D G "T0_DIV_8" 2 205 "2"
D G "T0_DIV_16" 2 206 "3"
D G "T0_DIV_32" 2 207 "4"
D G "T0_DIV_64" 2 208 "5"
D G "T0_DIV_128" 2 209 "6"
D G "T0_DIV_256" 2 210 "7"
D G "T0_OFF" 2 212 "0x80"
D G "T0_8_BIT" 2 214 "0x40"
D G "RTCC_INTERNAL" 2 218 "0"
D G "RTCC_EXT_L_TO_H" 2 219 "32"
D G "RTCC_EXT_H_TO_L" 2 220 "48"
D G "RTCC_DIV_1" 2 221 "8"
D G "RTCC_DIV_2" 2 222 "0"
D G "RTCC_DIV_4" 2 223 "1"
D G "RTCC_DIV_8" 2 224 "2"
D G "RTCC_DIV_16" 2 225 "3"
D G "RTCC_DIV_32" 2 226 "4"
D G "RTCC_DIV_64" 2 227 "5"
D G "RTCC_DIV_128" 2 228 "6"
D G "RTCC_DIV_256" 2 229 "7"
D G "RTCC_OFF" 2 230 "0x80"
D G "RTCC_8_BIT" 2 231 "0x40"
c L "get_rtcc" 2 3 8 "FUNCTION"
F N "setup_wdt" 2 242 ""
V L "mode" 2 242 "int16" `139 
F B "setup_wdt" 2 242 "void(int16 mode)" `138 
F N "restart_wdt" 2 243 ""
F B "restart_wdt" 2 243 "void()" `140  "Constants used for SETUP_WDT() are:"
D G "WDT_ON" 2 245 "0x100"
D G "WDT_OFF" 2 246 "0"
D G "WDT_4MS" 2 248 "0x300"
D G "WDT_8MS" 2 249 "0x500"
D G "WDT_16MS" 2 250 "0x700"
D G "WDT_32MS" 2 251 "0x900"
D G "WDT_64MS" 2 252 "0xB00"
D G "WDT_128MS" 2 253 "0xD00"
D G "WDT_256MS" 2 254 "0xF00"
D G "WDT_512MS" 2 255 "0x1100"
D G "WDT_1S" 2 256 "0x1300"
D G "WDT_2S" 2 257 "0x1500"
D G "WDT_4S" 2 258 "0x1700"
D G "WDT_8S" 2 259 "0x1900"
D G "WDT_16S" 2 260 "0x1B00"
D G "WDT_32S" 2 261 "0x1D00"
D G "WDT_64S" 2 262 "0x1F00"
D G "WDT_128S" 2 263 "0x2100"
c L "restart_wdt" 2 3 3 "FUNCTION"
F N "setup_timer_1" 2 268 ""
V L "mode" 2 268 "int16" `142 
F B "setup_timer_1" 2 268 "void(int16 mode)" `141 
F N "get_timer1" 2 269 ""
F B "get_timer1" 2 269 "int16()" `143 
F N "set_timer1" 2 270 ""
V L "value" 2 270 "int16" `145 
F B "set_timer1" 2 270 "void(int16 value)" `144  "Constants used for SETUP_TIMER_1() are:"
D G "T1_DISABLED" 2 273 "0"
D G "T1_INTERNAL" 2 274 "0x85"
D G "T1_EXTERNAL" 2 275 "0x87"
D G "T1_EXTERNAL_SYNC" 2 276 "0x83"
D G "T1_CLK_OUT" 2 278 "8"
D G "T1_DIV_BY_1" 2 280 "0"
D G "T1_DIV_BY_2" 2 281 "0x10"
D G "T1_DIV_BY_4" 2 282 "0x20"
D G "T1_DIV_BY_8" 2 283 "0x30"
c L "set_timer1" 2 3 3 "FUNCTION"
F N "setup_timer_2" 2 288 ""
V L "mode" 2 288 "int8" `147 
V L "period" 2 288 "int8" `148 
V L "postscale" 2 288 "int8" `149 
F B "setup_timer_2" 2 288 "void(int8 mode,int8 period,int8 postscale)" `146 
F N "get_timer2" 2 289 ""
F B "get_timer2" 2 289 "int8()" `150 
F N "set_timer2" 2 290 ""
V L "value" 2 290 "int8" `152 
F B "set_timer2" 2 290 "void(int8 value)" `151  "Constants used for SETUP_TIMER_2() are:"
D G "T2_DISABLED" 2 292 "0"
D G "T2_DIV_BY_1" 2 293 "4"
D G "T2_DIV_BY_4" 2 294 "5"
D G "T2_DIV_BY_16" 2 295 "6"
c L "set_timer2" 2 3 3 "FUNCTION"
F N "setup_timer_3" 2 300 ""
V L "mode" 2 300 "int16" `154 
F B "setup_timer_3" 2 300 "void(int16 mode)" `153 
F N "get_timer3" 2 301 ""
F B "get_timer3" 2 301 "int16()" `155 
F N "set_timer3" 2 302 ""
V L "value" 2 302 "int16" `157 
F B "set_timer3" 2 302 "void(int16 value)" `156  "Constants used for SETUP_TIMER_3() are:"
D G "T3_DISABLED" 2 305 "0"
D G "T3_INTERNAL" 2 306 "0x85"
D G "T3_EXTERNAL" 2 307 "0x87"
D G "T3_EXTERNAL_SYNC" 2 308 "0x83"
D G "T3_DIV_BY_1" 2 310 "0"
D G "T3_DIV_BY_2" 2 311 "0x10"
D G "T3_DIV_BY_4" 2 312 "0x20"
D G "T3_DIV_BY_8" 2 313 "0x30"
D G "T3_CCP1_TO_5" 2 316 "0x48"
D G "T3_CCP2_TO_5" 2 317 "0x8"
D G "T3_CCP3_TO_5" 2 318 "0x40"
c L "set_timer3" 2 3 3 "FUNCTION"
F N "setup_timer_4" 2 323 ""
V L "mode" 2 323 "int16" `159 
V L "period" 2 323 "int8" `160 
V L "postscaler" 2 323 "int8" `161 
F B "setup_timer_4" 2 323 "void(int16 mode,int8 period,int8 postscaler)" `158 
F N "get_timer4" 2 324 ""
F B "get_timer4" 2 324 "int8()" `162 
F N "set_timer4" 2 325 ""
V L "value" 2 325 "int8" `164 
F B "set_timer4" 2 325 "void(int8 value)" `163  "Constants used for SETUP_TIMER_4() are:"
D G "T4_DISABLED" 2 327 "0"
D G "T4_DIV_BY_1" 2 328 "4"
D G "T4_DIV_BY_4" 2 329 "5"
D G "T4_DIV_BY_16" 2 330 "6"
c L "set_timer4" 2 3 4 "FUNCTION"
F N "setup_ccp1" 2 336 ""
V L "mode" 2 336 "int32" `166 
F B "setup_ccp1" 2 336 "void(int32 mode)" `165 
F N "setup_ccp1" 2 337 ""
V L "mode" 2 337 "int32" `168 
V L "pwm" 2 337 "int8" `169 
F B "setup_ccp1" 2 337 "void(int32 mode,int8 pwm)" `167 
F N "set_pwm1_duty" 2 338 ""
V L "value" 2 338 "int8" `171 
F B "set_pwm1_duty" 2 338 "void(int8 value)" `170 
F N "set_pwm1_duty" 2 339 ""
V L "value" 2 339 "int16" `173 
F B "set_pwm1_duty" 2 339 "void(int16 value)" `172  "Constants used for SETUP_CCPx() are:"
D G "CCP_OFF" 2 341 "0"
D G "CCP_CAPTURE_FE" 2 342 "0x04"
D G "CCP_CAPTURE_RE" 2 343 "0x05"
D G "CCP_CAPTURE_DIV_4" 2 344 "0x06"
D G "CCP_CAPTURE_DIV_16" 2 345 "0x07"
D G "CCP_COMPARE_SET_ON_MATCH" 2 346 "0x08"
D G "CCP_COMPARE_CLR_ON_MATCH" 2 347 "0x09"
D G "CCP_COMPARE_INT" 2 348 "0x0A"
D G "CCP_COMPARE_INT_AND_TOGGLE" 2 349 "0x02"
D G "CCP_COMPARE_RESET_TIMER" 2 350 "0x0B"
D G "CCP_PWM" 2 351 "0x0C"
D G "CCP_PWM_PLUS_1" 2 352 "0x1c"
D G "CCP_PWM_PLUS_2" 2 353 "0x2c"
D G "CCP_PWM_PLUS_3" 2 354 "0x3c"
c L "set_pwm1_duty" 2 3 1 "FUNCTION"
D G "CCP_PWM_H_H" 2 362 "0x0c"
D G "CCP_PWM_H_L" 2 363 "0x0d"
D G "CCP_PWM_L_H" 2 364 "0x0e"
D G "CCP_PWM_L_L" 2 365 "0x0f"
D G "CCP_PWM_FULL_BRIDGE" 2 367 "0x40"
D G "CCP_PWM_FULL_BRIDGE_REV" 2 368 "0xC0"
D G "CCP_PWM_HALF_BRIDGE" 2 369 "0x80"
D G "CCP_SHUTDOWN_ON_COMP1" 2 371 "0x100000"
D G "CCP_SHUTDOWN_ON_COMP2" 2 372 "0x200000"
D G "CCP_SHUTDOWN_ON_COMP" 2 373 "0x300000"
D G "CCP_SHUTDOWN_ON_INT0" 2 374 "0x400000"
D G "CCP_SHUTDOWN_ON_COMP1_INT0" 2 375 "0x500000"
D G "CCP_SHUTDOWN_ON_COMP2_INT0" 2 376 "0x600000"
D G "CCP_SHUTDOWN_ON_COMP_INT0" 2 377 "0x700000"
D G "CCP_SHUTDOWN_AC_L" 2 379 "0x000000"
D G "CCP_SHUTDOWN_AC_H" 2 380 "0x040000"
D G "CCP_SHUTDOWN_AC_F" 2 381 "0x080000"
D G "CCP_SHUTDOWN_BD_L" 2 383 "0x000000"
D G "CCP_SHUTDOWN_BD_H" 2 384 "0x010000"
D G "CCP_SHUTDOWN_BD_F" 2 385 "0x020000"
D G "CCP_SHUTDOWN_RESTART" 2 387 "0x80000000"
c L "set_pwm1_duty" 2 3 1 "FUNCTION"
F N "setup_ccp2" 2 390 ""
V L "mode" 2 390 "int32" `178 
F B "setup_ccp2" 2 390 "void(int32 mode)" `177 
F N "setup_ccp2" 2 391 ""
V L "mode" 2 391 "int32" `180 
V L "pwm" 2 391 "int8" `181 
F B "setup_ccp2" 2 391 "void(int32 mode,int8 pwm)" `179 
F N "set_pwm2_duty" 2 392 ""
V L "value" 2 392 "int8" `183 
F B "set_pwm2_duty" 2 392 "void(int8 value)" `182 
F N "set_pwm2_duty" 2 393 ""
V L "value" 2 393 "int16" `185 
F B "set_pwm2_duty" 2 393 "void(int16 value)" `184 
c L "set_pwm2_duty" 2 3 1 "FUNCTION"
F N "setup_ccp3" 2 399 ""
V L "mode" 2 399 "int32" `190 
F B "setup_ccp3" 2 399 "void(int32 mode)" `189 
F N "setup_ccp3" 2 400 ""
V L "mode" 2 400 "int32" `192 
V L "pwm" 2 400 "int8" `193 
F B "setup_ccp3" 2 400 "void(int32 mode,int8 pwm)" `191 
F N "set_pwm3_duty" 2 401 ""
V L "value" 2 401 "int8" `195 
F B "set_pwm3_duty" 2 401 "void(int8 value)" `194 
F N "set_pwm3_duty" 2 402 ""
V L "value" 2 402 "int16" `197 
F B "set_pwm3_duty" 2 402 "void(int16 value)" `196 
c L "set_pwm3_duty" 2 3 1 "FUNCTION"
F N "setup_ccp4" 2 408 ""
V L "mode" 2 408 "int32" `202 
F B "setup_ccp4" 2 408 "void(int32 mode)" `201 
F N "setup_ccp4" 2 409 ""
V L "mode" 2 409 "int32" `204 
V L "pwm" 2 409 "int8" `205 
F B "setup_ccp4" 2 409 "void(int32 mode,int8 pwm)" `203 
F N "set_pwm4_duty" 2 410 ""
V L "value" 2 410 "int8" `207 
F B "set_pwm4_duty" 2 410 "void(int8 value)" `206 
F N "set_pwm4_duty" 2 411 ""
V L "value" 2 411 "int16" `209 
F B "set_pwm4_duty" 2 411 "void(int16 value)" `208 
c L "set_pwm4_duty" 2 3 1 "FUNCTION"
F N "setup_ccp5" 2 417 ""
V L "mode" 2 417 "int32" `214 
F B "setup_ccp5" 2 417 "void(int32 mode)" `213 
F N "setup_ccp5" 2 418 ""
V L "mode" 2 418 "int32" `216 
V L "pwm" 2 418 "int8" `217 
F B "setup_ccp5" 2 418 "void(int32 mode,int8 pwm)" `215 
F N "set_pwm5_duty" 2 419 ""
V L "value" 2 419 "int8" `219 
F B "set_pwm5_duty" 2 419 "void(int8 value)" `218 
F N "set_pwm5_duty" 2 420 ""
V L "value" 2 420 "int16" `221 
F B "set_pwm5_duty" 2 420 "void(int16 value)" `220 
c L "set_pwm5_duty" 2 3 5 "FUNCTION"
F N "setup_psp" 2 430 ""
V L "mode" 2 430 "int8" `226 
F B "setup_psp" 2 430 "void(int8 mode)" `225 
F N "psp_output_full" 2 431 ""
F B "psp_output_full" 2 431 "int8()" `227 
F N "psp_input_full" 2 432 ""
F B "psp_input_full" 2 432 "int8()" `228 
F N "psp_overflow" 2 433 ""
F B "psp_overflow" 2 433 "int8()" `229  "Constants used in SETUP_PSP() are:"
D G "PSP_ENABLED" 2 435 "0x10"
D G "PSP_DISABLED" 2 436 "0"
c L "psp_overflow" 2 3 3 "FUNCTION"
F N "setup_spi" 2 443 ""
V L "mode" 2 443 "int32" `232 
F B "setup_spi" 2 443 "void(int32 mode)" `231 
F N "spi_write" 2 444 ""
V L "value" 2 444 "int8" `234 
F B "spi_write" 2 444 "void(int8 value)" `233 
F N "spi_write" 2 445 ""
V L "wait" 2 445 "int8" `236 
V L "value" 2 445 "int8" `237 
F B "spi_write" 2 445 "void(int8 wait,int8 value)" `235 
F N "spi_read" 2 446 ""
F B "spi_read" 2 446 "int8()" `238 
F N "spi_read" 2 447 ""
V L "value" 2 447 "int8" `240 
F B "spi_read" 2 447 "int8(int8 value)" `239 
F N "spi_data_is_in" 2 448 ""
F B "spi_data_is_in" 2 448 "int8()" `241 
F N "setup_spi2" 2 449 ""
V L "mode" 2 449 "int32" `243 
F B "setup_spi2" 2 449 "void(int32 mode)" `242 
F N "spi_write2" 2 450 ""
V L "value" 2 450 "int8" `245 
F B "spi_write2" 2 450 "void(int8 value)" `244 
F N "spi_read2" 2 451 ""
F B "spi_read2" 2 451 "int8()" `246 
F N "spi_read2" 2 452 ""
V L "value" 2 452 "int8" `248 
F B "spi_read2" 2 452 "int8(int8 value)" `247 
F N "spi_data_is_in2" 2 453 ""
F B "spi_data_is_in2" 2 453 "int8()" `249  "Constants used in SETUP_SPI() are:"
D G "SPI_DISABLED" 2 455 "0x00"
D G "SPI_MASTER" 2 456 "0x20"
D G "SPI_SLAVE" 2 457 "0x24"
D G "SPI_SCK_IDLE_HIGH" 2 458 "0x10"
D G "SPI_SCK_IDLE_LOW" 2 459 "0x00"
D G "SPI_CLK_DIV_4" 2 460 "0x00"
D G "SPI_CLK_DIV_16" 2 461 "0x01"
D G "SPI_CLK_DIV_64" 2 462 "0x02"
D G "SPI_CLK_T2" 2 463 "0x03"
D G "SPI_XMIT_L_TO_H" 2 465 "0x4000"
D G "SPI_XMIT_H_TO_L" 2 466 "0x0000"
D G "SPI_SAMPLE_AT_MIDDLE" 2 468 "0x0000"
D G "SPI_SAMPLE_AT_END" 2 469 "0x8000"
D G "SPI_L_TO_H" 2 472 "SPI_SCK_IDLE_LOW"
D G "SPI_H_TO_L" 2 473 "SPI_SCK_IDLE_HIGH"
c L "spi_data_is_in2" 2 3 2 "FUNCTION"
F N "setup_uart" 2 477 ""
V L "baud" 2 477 "int32" `251 
F B "setup_uart" 2 477 "void(int32 baud)" `250 
F N "setup_uart" 2 478 ""
V L "baud" 2 478 "int32" `253 
V L "stream" 2 478 "int8" `254 
F B "setup_uart" 2 478 "void(int32 baud,int8 stream)" `252 
F N "setup_uart" 2 479 ""
V L "baud" 2 479 "int32" `256 
V L "stream" 2 479 "int8" `257 
V L "clock" 2 479 "int32" `258 
F B "setup_uart" 2 479 "void(int32 baud,int8 stream,int32 clock)" `255 
F N "set_uart_speed" 2 480 ""
V L "baud" 2 480 "int32" `260 
F B "set_uart_speed" 2 480 "void(int32 baud)" `259 
F N "set_uart_speed" 2 481 ""
V L "baud" 2 481 "int32" `262 
V L "stream" 2 481 "int8" `263 
F B "set_uart_speed" 2 481 "void(int32 baud,int8 stream)" `261 
F N "set_uart_speed" 2 482 ""
V L "baud" 2 482 "int32" `265 
V L "stream" 2 482 "int8" `266 
V L "clock" 2 482 "int32" `267 
F B "set_uart_speed" 2 482 "void(int32 baud,int8 stream,int32 clock)" `264  "Constants used in setup_uart() are:"
D G "UART_ADDRESS" 2 486 "2"
D G "UART_DATA" 2 487 "4"
D G "UART_AUTODETECT" 2 488 "8"
D G "UART_AUTODETECT_NOWAIT" 2 489 "9"
D G "UART_WAKEUP_ON_RDA" 2 490 "10"
D G "UART_SEND_BREAK" 2 491 "13"
c L "set_uart_speed" 2 3 3 "FUNCTION"
F N "setup_comparator" 2 496 ""
V L "mode" 2 496 "int32" `269 
F B "setup_comparator" 2 496 "void(int32 mode)" `268  "Constants used in setup_comparator() are:"
D G "F6_F5_F4_F5" 2 498 "0x70ff04"
D G "F6_F5_F4_F3_OUT_ON_F2_F1" 2 499 "0x78F903"
D G "F6_F5_F4_F5_OUT_ON_F2_F1" 2 500 "0x70F905"
D G "NC_NC_NC_NC" 2 501 "0x00ff07"
D G "F6_F5_F4_F3" 2 502 "0x78ff02"
D G "F6_F5_NC_NC_OUT_ON_F2" 2 503 "0x60FB01"
D G "F6_VR_F4_VR" 2 504 "0x50ff06"
D G "F5_VR_F3_VR" 2 505 "0x28ff0e"
c L "setup_comparator" 2 3 2 "FUNCTION"
F N "setup_vref" 2 512 ""
V L "mode" 2 512 "int8" `273 
F B "setup_vref" 2 512 "void(int8 mode)" `272  "Constants used in setup_vref() are:"
D G "VREF_LOW" 2 514 "0xa0"
D G "VREF_HIGH" 2 515 "0x80"
D G "VREF_F5" 2 517 "0x40"
D G "VREF_COMP" 2 518 "0x10"
c L "setup_vref" 2 3 2 "FUNCTION"
F N "setup_low_volt_detect" 2 522 ""
V L "mode" 2 522 "int8" `275 
F B "setup_low_volt_detect" 2 522 "void(int8 mode)" `274  "Constants used in setup_low_volt_detect() are:"
D G "LVD_LVDIN" 2 524 "0x1F"
D G "LVD_45" 2 525 "0x1E"
D G "LVD_42" 2 526 "0x1D"
D G "LVD_40" 2 527 "0x1C"
D G "LVD_38" 2 528 "0x1B"
D G "LVD_36" 2 529 "0x1A"
D G "LVD_35" 2 530 "0x19"
D G "LVD_33" 2 531 "0x18"
D G "LVD_30" 2 532 "0x17"
D G "LVD_28" 2 533 "0x16"
D G "LVD_27" 2 534 "0x15"
D G "LVD_25" 2 535 "0x14"
D G "LVD_23" 2 536 "0x13"
D G "LVD_21" 2 537 "0x12"
D G "LVD_19" 2 538 "0x11"
D G "LVD_TRIGGER_BELOW" 2 540 "0"
D G "LVD_TRIGGER_ABOVE" 2 541 "0x80"
c L "setup_low_volt_detect" 2 3 2 "FUNCTION"
F N "setup_oscillator" 2 546 ""
V L "mode" 2 546 "int8" `277 
F B "setup_oscillator" 2 546 "int8(int8 mode)" `276 
F N "setup_oscillator" 2 547 ""
V L "mode" 2 547 "int8" `279 
V L "tune" 2 547 "sint8" `280 
F B "setup_oscillator" 2 547 "int8(int8 mode,sint8 tune)" `278  "Constants used in setup_oscillator() are:"
D G "OSC_31KHZ" 2 550 "0"
D G "OSC_125KHZ" 2 551 "0x10"
D G "OSC_250KHZ" 2 552 "0x20"
D G "OSC_500KHZ" 2 553 "0x30"
D G "OSC_1MHZ" 2 554 "0x40"
D G "OSC_2MHZ" 2 555 "0x50"
D G "OSC_4MHZ" 2 556 "0x60"
D G "OSC_8MHZ" 2 557 "0x70"
D G "OSC_16MHZ" 2 558 "0x4060"
D G "OSC_32MHZ" 2 559 "0x4070"
D G "OSC_TIMER1" 2 561 "1"
D G "OSC_INTRC" 2 562 "2"
D G "OSC_NORMAL" 2 563 "0"
D G "OSC_IDLE_MODE" 2 565 "0x80"
D G "OSC_31250" 2 566 "0x8000"
D G "OSC_PLL_ON" 2 567 "0x4000"
D G "OSC_PLL_OFF" 2 568 "0"
D G "OSC_STATE_STABLE" 2 572 "4"
D G "OSC_STATE_EXT_RUNNING" 2 573 "8"
c L "setup_oscillator" 2 3 4 "FUNCTION"
F N "setup_adc" 2 580 ""
V L "mode" 2 580 "int16" `282 
F B "setup_adc" 2 580 "void(int16 mode)" `281 
F N "read_adc" 2 581 ""
F B "read_adc" 2 581 "int8()" `283 
F N "read_adc" 2 582 ""
V L "mode" 2 582 "int8" `285 
F B "read_adc" 2 582 "int8(int8 mode)" `284 
F N "read_adc" 2 583 ""
f G "read_adc" 2 583 "int16()" `286 
F N "read_adc" 2 584 ""
V L "mode" 2 584 "int8" `287 
f G "read_adc" 2 584 "int16(int8 mode,int8 pins)" `286 
F N "adc_done" 2 585 ""
F B "adc_done" 2 585 "int8(int8 mode,int8 pins)" `286  "Constants used for SETUP_ADC() are:"
D G "ADC_OFF" 2 587 "0" "ADC Off"
D G "ADC_CLOCK_DIV_2" 2 588 "0x100"
D G "ADC_CLOCK_DIV_4" 2 589 "0x04"
D G "ADC_CLOCK_DIV_8" 2 590 "0x01"
D G "ADC_CLOCK_DIV_16" 2 591 "0x05"
D G "ADC_CLOCK_DIV_32" 2 592 "0x02"
D G "ADC_CLOCK_DIV_64" 2 593 "0x06"
D G "ADC_CLOCK_INTERNAL" 2 594 "0x07" "Internal 2-6us"
D G "ADC_TAD_MUL_0" 2 596 "0x00"
D G "ADC_TAD_MUL_2" 2 597 "0x08"
D G "ADC_TAD_MUL_4" 2 598 "0x10"
D G "ADC_TAD_MUL_6" 2 599 "0x18"
D G "ADC_TAD_MUL_8" 2 600 "0x20"
D G "ADC_TAD_MUL_12" 2 601 "0x28"
D G "ADC_TAD_MUL_16" 2 602 "0x30"
D G "ADC_TAD_MUL_20" 2 603 "0x38"
c L "adc_done" 2 3 1 "FUNCTION"
F N "setup_adc_ports" 2 606 ""
V L "pins" 2 606 "int8" `288 
F B "setup_adc_ports" 2 606 "void(int8 pins)" `287 
F N "setup_adc_ports" 2 607 ""
V L "pins" 2 607 "int8" `290 
V L "reference" 2 607 "int8" `291 
F B "setup_adc_ports" 2 607 "void(int8 pins,int8 reference)" `289 
F N "set_analog_pins" 2 608 ""
V L "pins" 2 608 "int8" `293 
F B "set_analog_pins" 2 608 "void(int8 pins)" `292 
F N "set_analog_pins" 2 609 ""
V L "pins" 2 609 "int8" `295 
V L "reference" 2 609 "int8" `296 
F B "set_analog_pins" 2 609 "void(int8 pins,int8 reference)" `294 
F N "set_adc_channel" 2 610 ""
V L "channel" 2 610 "int8" `298 
F B "set_adc_channel" 2 610 "void(int8 channel)" `297  "Constants used in SETUP_ADC_PORTS() and SET_ANALOG_PINS() are:"
D G "NO_ANALOGS" 2 613 "0x0F" "None"
D G "ALL_ANALOG" 2 614 "0x00" "A0 A1 A2 A3 A5 F0 F1 F2 F3 F4 F5 F6"
D G "AN0_TO_AN10" 2 615 "0x04" "A0 A1 A2 A3 A5 F0 F1 F2 F3 F4 F5"
D G "AN0_TO_AN9" 2 616 "0x05" "A0 A1 A2 A3 A5 F0 F1 F2 F3 F4"
D G "AN0_TO_AN8" 2 617 "0x06" "A0 A1 A2 A3 A5 F0 F1 F2 F3"
D G "AN0_TO_AN7" 2 618 "0x07" "A0 A1 A2 A3 A5 F0 F1 F2"
D G "AN0_TO_AN6" 2 619 "0x08" "A0 A1 A2 A3 A5 F0 F1"
D G "AN0_TO_AN5" 2 620 "0x09" "A0 A1 A2 A3 A5 F0"
D G "AN0_TO_AN4" 2 621 "0x0A" "A0 A1 A2 A3 A5"
D G "AN0_TO_AN3" 2 622 "0x0B" "A0 A1 A2 A3"
D G "AN0_TO_AN2" 2 623 "0x0C" "A0 A1 A2"
D G "AN0_TO_AN1" 2 624 "0x0D" "A0 A1"
D G "AN0" 2 625 "0x0E" "A0"
D G "ANALOG_AN0_TO_AN10" 2 626 "0x04" "!old only provided for compatibility"
D G "ANALOG_AN0_TO_AN9" 2 627 "0x05" "!old only provided for compatibility"
D G "ANALOG_AN0_TO_AN8" 2 628 "0x06" "!old only provided for compatibility"
D G "ANALOG_AN0_TO_AN7" 2 629 "0x07" "!old only provided for compatibility"
D G "ANALOG_AN0_TO_AN6" 2 630 "0x08" "!old only provided for compatibility"
D G "ANALOG_AN0_TO_AN5" 2 631 "0x09" "!old only provided for compatibility"
D G "ANALOG_AN0_TO_AN4" 2 632 "0x0A" "!old only provided for compatibility"
D G "ANALOG_AN0_TO_AN3" 2 633 "0x0B" "!old only provided for compatibility"
D G "ANALOG_AN0_TO_AN2" 2 634 "0x0C" "!old only provided for compatibility"
D G "ANALOG_AN0_TO_AN1" 2 635 "0x0D" "!old only provided for compatibility"
D G "ANALOG_AN0" 2 636 "0x0E" "!old only provided for compatibility"
D G "VSS_VDD" 2 639 "0x00" "Range 0-Vdd"
D G "VREF_VREF" 2 640 "0x30" "Range VrefL-VrefH"
D G "VREF_VDD" 2 641 "0x20" "Range VrefL-Vdd"
D G "VSS_VREF" 2 642 "0x10" "Range 0-VrefH"
D G "ADC_START_AND_READ" 2 645 "7" "This is the default if nothing is specified"
D G "ADC_START_ONLY" 2 646 "1"
D G "ADC_READ_ONLY" 2 647 "6"
c L "set_adc_channel" 2 3 3 "FUNCTION"
F N "abs" 2 653 ""
V L "x" 2 653 "sint8" `300 
F B "abs" 2 653 "sint8(sint8 x)" `299 
F N "abs" 2 654 ""
V L "x" 2 654 "sint16" `302 
F B "abs" 2 654 "sint16(sint16 x)" `301 
F N "abs" 2 655 ""
V L "x" 2 655 "sint32" `304 
F B "abs" 2 655 "sint32(sint32 x)" `303 
F N "abs" 2 656 ""
V L "x" 2 656 "float" `306 
F B "abs" 2 656 "float(float x)" `305 
F N "_mul" 2 657 ""
V L "??65535" 2 657 "int8" `308 
V L "??65535" 2 657 "int8" `309 
F B "_mul" 2 657 "int16(int8 ,int8 )" `307 
F N "_mul" 2 658 ""
V L "??65535" 2 658 "sint8" `311 
V L "??65535" 2 658 "sint8" `312 
F B "_mul" 2 658 "sint16(sint8 ,sint8 )" `310 
F N "_mul" 2 659 ""
V L "??65535" 2 659 "int16" `314 
V L "??65535" 2 659 "int16" `315 
F B "_mul" 2 659 "int32(int16 ,int16 )" `313 
F N "_mul" 2 660 ""
V L "??65535" 2 660 "sint16" `317 
V L "??65535" 2 660 "sint16" `318 
F B "_mul" 2 660 "sint32(sint16 ,sint16 )" `316  "Memory Manipulation Prototypes:"
F N "read_bank" 2 663 ""
V L "bank" 2 663 "int8" `320 
V L "offset" 2 663 "int8" `321 
F B "read_bank" 2 663 "int8(int8 bank,int8 offset)" `319 
F N "write_bank" 2 664 ""
V L "bank" 2 664 "int8" `323 
V L "offset" 2 664 "int8" `324 
V L "value" 2 664 "int8" `325 
F B "write_bank" 2 664 "void(int8 bank,int8 offset,int8 value)" `322 
F N "strcpy" 2 665 ""
V L "dest" 2 665 "*int8" `327 
V L "src" 2 665 "*int8" `328 
F B "strcpy" 2 665 "void(*int8 dest,*int8 src)" `326 
F N "memset" 2 666 ""
V L "destination" 2 666 "*int8" `330 
V L "value" 2 666 "int8" `331 
V L "num" 2 666 "int16" `332 
F B "memset" 2 666 "void(*int8 destination,int8 value,int16 num)" `329 
F N "memcpy" 2 667 ""
V L "destination" 2 667 "*int8" `334 
V L "source" 2 667 "*int8" `335 
V L "num" 2 667 "int16" `336 
F B "memcpy" 2 667 "void(*int8 destination,*int8 source,int16 num)" `333  "String Prototypes:"
F N "toupper" 2 670 ""
V L "cvalue" 2 670 "int8" `338 
F B "toupper" 2 670 "int8(int8 cvalue)" `337 
F N "tolower" 2 671 ""
V L "cvalue" 2 671 "int8" `340 
F B "tolower" 2 671 "int8(int8 cvalue)" `339 
F N "sprintf" 2 672 ""
V L "string" 2 672 "*int8" `342 
V L "cstring" 2 672 "*int8" `343 
F B "sprintf" 2 672 "void(*int8 string,*int8 cstring,*int8 _VA_LIST)" `341  "Data Manipulators Prototypes:"
F N "shift_left" 2 675 ""
V L "address" 2 675 "*int8" `346 
V L "bytes" 2 675 "int8" `347 
V L "value" 2 675 "int8" `348 
F B "shift_left" 2 675 "int8(*int8 address,int8 bytes,int8 value)" `345 
F N "shift_right" 2 676 ""
V L "address" 2 676 "*int8" `350 
V L "bytes" 2 676 "int8" `351 
V L "value" 2 676 "int8" `352 
F B "shift_right" 2 676 "int8(*int8 address,int8 bytes,int8 value)" `349 
F N "rotate_left" 2 677 ""
V L "address" 2 677 "*int8" `354 
V L "bytes" 2 677 "int8" `355 
F B "rotate_left" 2 677 "void(*int8 address,int8 bytes)" `353 
F N "rotate_right" 2 678 ""
V L "address" 2 678 "*int8" `357 
V L "bytes" 2 678 "int8" `358 
F B "rotate_right" 2 678 "void(*int8 address,int8 bytes)" `356 
F N "swap" 2 679 ""
V L "value" 2 679 "int8" `360 
F B "swap" 2 679 "void(int8 value)" `359 
F N "make8" 2 680 ""
V L "var" 2 680 "int16" `362 
V L "offset" 2 680 "int8" `363 
F B "make8" 2 680 "int8(int16 var,int8 offset)" `361 
F N "make8" 2 681 ""
V L "var" 2 681 "int32" `365 
V L "offset" 2 681 "int8" `366 
F B "make8" 2 681 "int8(int32 var,int8 offset)" `364 
F N "make16" 2 682 ""
V L "varhigh" 2 682 "int8" `368 
V L "varlow" 2 682 "int8" `369 
F B "make16" 2 682 "int16(int8 varhigh,int8 varlow)" `367 
F N "make32" 2 683 ""
V L "var1" 2 683 "int16" `371 
F B "make32" 2 683 "int32(int16 var1)" `370 
F N "make32" 2 684 ""
V L "var1" 2 684 "int16" `373 
V L "var2" 2 684 "int16" `374 
F B "make32" 2 684 "int32(int16 var1,int16 var2)" `372 
F N "make32" 2 685 ""
V L "var1" 2 685 "int16" `376 
V L "var2" 2 685 "int8" `377 
F B "make32" 2 685 "int32(int16 var1,int8 var2)" `375 
F N "make32" 2 686 ""
V L "var1" 2 686 "int16" `379 
V L "var2" 2 686 "int8" `380 
V L "var3" 2 686 "int8" `381 
F B "make32" 2 686 "int32(int16 var1,int8 var2,int8 var3)" `378 
F N "make32" 2 687 ""
V L "var1" 2 687 "int8" `383 
F B "make32" 2 687 "int32(int8 var1)" `382 
F N "make32" 2 688 ""
V L "var1" 2 688 "int8" `385 
V L "var2" 2 688 "int8" `386 
F B "make32" 2 688 "int32(int8 var1,int8 var2)" `384 
F N "make32" 2 689 ""
V L "var1" 2 689 "int8" `388 
V L "var2" 2 689 "int8" `389 
V L "var3" 2 689 "int8" `390 
F B "make32" 2 689 "int32(int8 var1,int8 var2,int8 var3)" `387 
F N "make32" 2 690 ""
V L "var1" 2 690 "int8" `392 
V L "var2" 2 690 "int8" `393 
V L "var3" 2 690 "int8" `394 
V L "var4" 2 690 "int8" `395 
F B "make32" 2 690 "int32(int8 var1,int8 var2,int8 var3,int8 var4)" `391 
F N "make32" 2 691 ""
V L "var1" 2 691 "int8" `397 
V L "var2" 2 691 "int16" `398 
F B "make32" 2 691 "int32(int8 var1,int16 var2)" `396 
F N "make32" 2 692 ""
V L "var1" 2 692 "int8" `400 
V L "var2" 2 692 "int16" `401 
V L "var3" 2 692 "int8" `402 
F B "make32" 2 692 "int32(int8 var1,int16 var2,int8 var3)" `399 
F N "make32" 2 693 ""
V L "var1" 2 693 "int8" `404 
V L "var2" 2 693 "int8" `405 
V L "var3" 2 693 "int16" `406 
F B "make32" 2 693 "int32(int8 var1,int8 var2,int16 var3)" `403 
F N "bit_set" 2 694 ""
V L "var" 2 694 "int8" `408 
V L "bit" 2 694 "int8" `409 
F B "bit_set" 2 694 "void(int8 var,int8 bit)" `407 
F N "bit_set" 2 695 ""
V L "var" 2 695 "int16" `411 
V L "bit" 2 695 "int8" `412 
F B "bit_set" 2 695 "void(int16 var,int8 bit)" `410 
F N "bit_set" 2 696 ""
V L "var" 2 696 "int32" `414 
V L "bit" 2 696 "int8" `415 
F B "bit_set" 2 696 "void(int32 var,int8 bit)" `413 
F N "bit_clear" 2 697 ""
V L "var" 2 697 "int8" `417 
V L "bit" 2 697 "int8" `418 
F B "bit_clear" 2 697 "void(int8 var,int8 bit)" `416 
F N "bit_clear" 2 698 ""
V L "var" 2 698 "int16" `420 
V L "bit" 2 698 "int8" `421 
F B "bit_clear" 2 698 "void(int16 var,int8 bit)" `419 
F N "bit_clear" 2 699 ""
V L "var" 2 699 "int32" `423 
V L "bit" 2 699 "int8" `424 
F B "bit_clear" 2 699 "void(int32 var,int8 bit)" `422 
F N "bit_test" 2 700 ""
V L "var" 2 700 "int8" `426 
V L "bit" 2 700 "int8" `427 
F B "bit_test" 2 700 "int8(int8 var,int8 bit)" `425 
F N "bit_test" 2 701 ""
V L "var" 2 701 "int16" `429 
V L "bit" 2 701 "int8" `430 
F B "bit_test" 2 701 "int8(int16 var,int8 bit)" `428 
F N "bit_test" 2 702 ""
V L "var" 2 702 "int32" `432 
V L "bit" 2 702 "int8" `433 
F B "bit_test" 2 702 "int8(int32 var,int8 bit)" `431  "#use delay() Prototypes:"
F N "delay_cycles" 2 705 ""
V L "count" 2 705 "int8" `435 
F B "delay_cycles" 2 705 "void(int8 count)" `434 
F N "delay_ms" 2 706 ""
V L "time" 2 706 "int16" `437 
F B "delay_ms" 2 706 "void(int16 time)" `436 
F N "delay_us" 2 707 ""
V L "time" 2 707 "int16" `439 
F B "delay_us" 2 707 "void(int16 time)" `438  "#use rs232() Prototypes:"
F N "putchar" 2 710 ""
V L "cdata" 2 710 "int8" `441 
F B "putchar" 2 710 "void(int8 cdata)" `440 
F N "putchar" 2 711 ""
V L "cdata" 2 711 "int8" `443 
V L "stream" 2 711 "int8" `444 
F B "putchar" 2 711 "void(int8 cdata,int8 stream)" `442 
F N "puts" 2 712 ""
V L "string" 2 712 "*int8" `446 
F B "puts" 2 712 "void(*int8 string)" `445 
F N "puts" 2 713 ""
V L "string" 2 713 "*int8" `448 
V L "stream" 2 713 "int8" `449 
F B "puts" 2 713 "void(*int8 string,int8 stream)" `447 
F N "getch" 2 714 ""
F B "getch" 2 714 "int8()" `450 
F N "getch" 2 715 ""
V L "stream" 2 715 "int8" `452 
F B "getch" 2 715 "int8(int8 stream)" `451 
F N "gets" 2 716 ""
V L "string" 2 716 "*int8" `454 
F B "gets" 2 716 "void(*int8 string)" `453 
F N "gets" 2 717 ""
V L "string" 2 717 "*int8" `456 
V L "stream" 2 717 "int8" `457 
F B "gets" 2 717 "void(*int8 string,int8 stream)" `455 
F N "kbhit" 2 718 ""
F B "kbhit" 2 718 "int8()" `458 
F N "kbhit" 2 719 ""
V L "stream" 2 719 "int8" `460 
F B "kbhit" 2 719 "int8(int8 stream)" `459 
F N "printf" 2 720 ""
V L "string" 2 720 "*int8" `462 
F B "printf" 2 720 "void(*int8 string,*int8 _VA_LIST)" `461 
F N "fprintf" 2 721 ""
V L "stream" 2 721 "int8" `465 
V L "string" 2 721 "*int8" `466 
F B "fprintf" 2 721 "void(int8 stream,*int8 string,*int8 _VA_LIST)" `464 
F N "putc_send" 2 722 ""
F B "putc_send" 2 722 "void()" `468 
F N "fputc_send" 2 723 ""
V L "stream" 2 723 "int8" `470 
F B "fputc_send" 2 723 "void(int8 stream)" `469 
F N "rcv_buffer_full" 2 724 ""
F B "rcv_buffer_full" 2 724 "int8()" `471 
F N "rcv_buffer_full" 2 725 ""
V L "stream" 2 725 "int8" `473 
F B "rcv_buffer_full" 2 725 "int8(int8 stream)" `472 
F N "rcv_buffer_bytes" 2 726 ""
F B "rcv_buffer_bytes" 2 726 "int16()" `474 
F N "rcv_buffer_bytes" 2 727 ""
V L "stream" 2 727 "int8" `476 
F B "rcv_buffer_bytes" 2 727 "int16(int8 stream)" `475 
F N "tx_buffer_full" 2 728 ""
F B "tx_buffer_full" 2 728 "int8()" `477 
F N "tx_buffer_full" 2 729 ""
V L "stream" 2 729 "int8" `479 
F B "tx_buffer_full" 2 729 "int8(int8 stream)" `478 
F N "tx_buffer_bytes" 2 730 ""
F B "tx_buffer_bytes" 2 730 "int16()" `480 
F N "tx_buffer_bytes" 2 731 ""
V L "stream" 2 731 "int8" `482 
F B "tx_buffer_bytes" 2 731 "int16(int8 stream)" `481 
F N "linbus_header" 2 732 ""
V L "identifier" 2 732 "int8" `484 
F B "linbus_header" 2 732 "int8(int8 identifier)" `483 
F N "linbus_header" 2 733 ""
V L "stream" 2 733 "int8" `486 
V L "identifier" 2 733 "int8" `487 
F B "linbus_header" 2 733 "int8(int8 stream,int8 identifier)" `485 
F N "linbus_header_hit" 2 734 ""
F B "linbus_header_hit" 2 734 "int8()" `488 
F N "linbus_header_hit" 2 735 ""
V L "stream" 2 735 "int8" `490 
F B "linbus_header_hit" 2 735 "int8(int8 stream)" `489 
F N "linbus_header_get" 2 736 ""
F B "linbus_header_get" 2 736 "int8()" `491 
F N "linbus_header_get" 2 737 ""
V L "stream" 2 737 "int8" `493 
F B "linbus_header_get" 2 737 "int8(int8 stream)" `492 
F N "linbus_rx_response" 2 738 ""
V L "DataPtr" 2 738 "*int8" `495 
V L "count" 2 738 "int8" `496 
F B "linbus_rx_response" 2 738 "int8(*int8 DataPtr,int8 count)" `494 
F N "linbus_rx_response" 2 739 ""
V L "stream" 2 739 "int8" `498 
V L "DataPtr" 2 739 "*int8" `499 
V L "count" 2 739 "int8" `500 
F B "linbus_rx_response" 2 739 "int8(int8 stream,*int8 DataPtr,int8 count)" `497 
F N "linbus_tx_response" 2 740 ""
V L "DataPtr" 2 740 "*int8" `502 
V L "count" 2 740 "int8" `503 
F B "linbus_tx_response" 2 740 "void(*int8 DataPtr,int8 count)" `501 
F N "linbus_tx_response" 2 741 ""
V L "stream" 2 741 "int8" `505 
V L "DataPtr" 2 741 "*int8" `506 
V L "count" 2 741 "int8" `507 
F B "linbus_tx_response" 2 741 "void(int8 stream,*int8 DataPtr,int8 count)" `504 
F N "linbus_checksum_type" 2 742 ""
V L "type" 2 742 "int8" `509 
F B "linbus_checksum_type" 2 742 "void(int8 type)" `508 
F N "linbus_checksum_type" 2 743 ""
V L "stream" 2 743 "int8" `511 
V L "type" 2 743 "int8" `512 
F B "linbus_checksum_type" 2 743 "void(int8 stream,int8 type)" `510  "#use i2c() Prototypes:"
F N "i2c_read" 2 746 ""
F B "i2c_read" 2 746 "int8()" `513 
F N "i2c_read" 2 747 ""
V L "ack" 2 747 "int8" `515 
F B "i2c_read" 2 747 "int8(int8 ack)" `514 
F N "i2c_read" 2 748 ""
V L "stream" 2 748 "int8" `517 
V L "ack" 2 748 "int8" `518 
F B "i2c_read" 2 748 "int8(int8 stream,int8 ack)" `516 
F N "i2c_write" 2 749 ""
V L "data" 2 749 "int8" `520 
F B "i2c_write" 2 749 "int8(int8 data)" `519 
F N "i2c_write" 2 750 ""
V L "stream" 2 750 "int8" `522 
V L "data" 2 750 "int8" `523 
F B "i2c_write" 2 750 "int8(int8 stream,int8 data)" `521 
F N "i2c_start" 2 751 ""
F B "i2c_start" 2 751 "void()" `524 
F N "i2c_start" 2 752 ""
V L "stream" 2 752 "int8" `526 
F B "i2c_start" 2 752 "void(int8 stream)" `525 
F N "i2c_start" 2 753 ""
V L "stream" 2 753 "int8" `528 
V L "restart" 2 753 "int8" `529 
F B "i2c_start" 2 753 "void(int8 stream,int8 restart)" `527 
F N "i2c_stop" 2 754 ""
F B "i2c_stop" 2 754 "void()" `530 
F N "i2c_stop" 2 755 ""
V L "stream" 2 755 "int8" `532 
F B "i2c_stop" 2 755 "void(int8 stream)" `531 
F N "i2c_isr_state" 2 756 ""
F B "i2c_isr_state" 2 756 "int8()" `533 
F N "i2c_slaveaddr" 2 757 ""
V L "addr" 2 757 "int8" `535 
F B "i2c_slaveaddr" 2 757 "void(int8 addr)" `534 
F N "i2c_slaveaddr" 2 758 ""
V L "stream" 2 758 "int8" `537 
V L "addr" 2 758 "int8" `538 
F B "i2c_slaveaddr" 2 758 "void(int8 stream,int8 addr)" `536 
F N "i2c_poll" 2 759 ""
F B "i2c_poll" 2 759 "int8()" `539 
F N "i2c_poll" 2 760 ""
V L "stream" 2 760 "int8" `541 
F B "i2c_poll" 2 760 "int8(int8 stream)" `540 
F N "i2c_init" 2 761 ""
V L "baud" 2 761 "int32" `543 
F B "i2c_init" 2 761 "void(int32 baud)" `542 
F N "i2c_init" 2 762 ""
V L "stream" 2 762 "int8" `545 
V L "baud" 2 762 "int32" `546 
F B "i2c_init" 2 762 "void(int8 stream,int32 baud)" `544 
F N "i2c_transfer" 2 763 ""
V L "address" 2 763 "int8" `548 
V L "wData" 2 763 "*int8" `549 
V L "wCount" 2 763 "int8" `550 
F B "i2c_transfer" 2 763 "int8(int8 address,*int8 wData,int8 wCount)" `547 
F N "i2c_transfer" 2 764 ""
V L "address" 2 764 "int8" `552 
V L "wData" 2 764 "*int8" `553 
V L "wCount" 2 764 "int8" `554 
V L "rData" 2 764 "*int8" `555 
V L "rCount" 2 764 "*int8" `556 
F B "i2c_transfer" 2 764 "int8(int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `551 
F N "i2c_transfer" 2 765 ""
V L "stream" 2 765 "int8" `558 
V L "address" 2 765 "int8" `559 
V L "wData" 2 765 "*int8" `560 
V L "wCount" 2 765 "int8" `561 
F B "i2c_transfer" 2 765 "int8(int8 stream,int8 address,*int8 wData,int8 wCount)" `557 
F N "i2c_transfer" 2 766 ""
V L "stream" 2 766 "int8" `563 
V L "address" 2 766 "int8" `564 
V L "wData" 2 766 "*int8" `565 
V L "wCount" 2 766 "int8" `566 
V L "rData" 2 766 "*int8" `567 
V L "rCount" 2 766 "*int8" `568 
F B "i2c_transfer" 2 766 "int8(int8 stream,int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `562 
F N "i2c_transfer_out" 2 767 ""
V L "address" 2 767 "int8" `570 
V L "wData" 2 767 "*int8" `571 
V L "wCount" 2 767 "int8" `572 
F B "i2c_transfer_out" 2 767 "int8(int8 address,*int8 wData,int8 wCount)" `569 
F N "i2c_transfer_out" 2 768 ""
V L "stream" 2 768 "int8" `574 
V L "address" 2 768 "int8" `575 
V L "wData" 2 768 "*int8" `576 
V L "wCount" 2 768 "int8" `577 
F B "i2c_transfer_out" 2 768 "int8(int8 stream,int8 address,*int8 wData,int8 wCount)" `573 
F N "i2c_transfer_in" 2 769 ""
V L "address" 2 769 "int8" `579 
V L "rData" 2 769 "*int8" `580 
V L "rCount" 2 769 "int8" `581 
F B "i2c_transfer_in" 2 769 "int8(int8 address,*int8 rData,int8 rCount)" `578 
F N "i2c_transfer_in" 2 770 ""
V L "stream" 2 770 "int8" `583 
V L "address" 2 770 "int8" `584 
V L "rData" 2 770 "*int8" `585 
V L "rCount" 2 770 "int8" `586 
F B "i2c_transfer_in" 2 770 "int8(int8 stream,int8 address,*int8 rData,int8 rCount)" `582  "#use spi() Prototypes:"
F N "spi_xfer" 2 773 ""
F B "spi_xfer" 2 773 "int8()" `587 
F N "spi_xfer" 2 774 ""
f G "spi_xfer" 2 774 "int16(int8 data)" `588 
F N "spi_xfer" 2 775 ""
f G "spi_xfer" 2 775 "int32(int8 data)" `588 
F N "spi_xfer" 2 776 ""
V L "data" 2 776 "int8" `589 
F B "spi_xfer" 2 776 "int8(int8 data)" `588 
F N "spi_xfer" 2 777 ""
V L "data" 2 777 "int16" `591 
F B "spi_xfer" 2 777 "int16(int16 data)" `590 
F N "spi_xfer" 2 778 ""
V L "data" 2 778 "int32" `593 
F B "spi_xfer" 2 778 "int32(int32 data)" `592 
F N "spi_xfer" 2 779 ""
V L "stream" 2 779 "int8" `595 
V L "data" 2 779 "int8" `596 
F B "spi_xfer" 2 779 "int8(int8 stream,int8 data)" `594 
F N "spi_xfer" 2 780 ""
V L "stream" 2 780 "int8" `598 
V L "data" 2 780 "int16" `599 
F B "spi_xfer" 2 780 "int16(int8 stream,int16 data)" `597 
F N "spi_xfer" 2 781 ""
V L "stream" 2 781 "int8" `601 
V L "data" 2 781 "int32" `602 
F B "spi_xfer" 2 781 "int32(int8 stream,int32 data)" `600 
F N "spi_xfer" 2 782 ""
V L "stream" 2 782 "int8" `604 
V L "data" 2 782 "int8" `605 
V L "bits" 2 782 "int8" `606 
F B "spi_xfer" 2 782 "int8(int8 stream,int8 data,int8 bits)" `603 
F N "spi_xfer" 2 783 ""
V L "stream" 2 783 "int8" `608 
V L "data" 2 783 "int16" `609 
V L "bits" 2 783 "int8" `610 
F B "spi_xfer" 2 783 "int16(int8 stream,int16 data,int8 bits)" `607 
F N "spi_xfer" 2 784 ""
V L "stream" 2 784 "int8" `612 
V L "data" 2 784 "int32" `613 
V L "bits" 2 784 "int8" `614 
F B "spi_xfer" 2 784 "int32(int8 stream,int32 data,int8 bits)" `611 
F N "spi_init" 2 785 ""
V L "baud" 2 785 "int32" `616 
F B "spi_init" 2 785 "void(int32 baud)" `615 
F N "spi_init" 2 786 ""
V L "stream" 2 786 "int8" `618 
V L "baud" 2 786 "int32" `619 
F B "spi_init" 2 786 "void(int8 stream,int32 baud)" `617 
F N "spi_speed" 2 787 ""
V L "baud" 2 787 "int32" `621 
F B "spi_speed" 2 787 "void(int32 baud)" `620 
F N "spi_speed" 2 788 ""
V L "stream" 2 788 "int8" `623 
V L "baud" 2 788 "int32" `624 
F B "spi_speed" 2 788 "void(int8 stream,int32 baud)" `622 
F N "spi_speed" 2 789 ""
V L "stream" 2 789 "int8" `626 
V L "baud" 2 789 "int32" `627 
V L "clock" 2 789 "int32" `628 
F B "spi_speed" 2 789 "void(int8 stream,int32 baud,int32 clock)" `625 
F N "spi_prewrite" 2 790 ""
V L "data" 2 790 "int8" `630 
F B "spi_prewrite" 2 790 "void(int8 data)" `629 
F N "spi_prewrite" 2 791 ""
V L "data" 2 791 "int16" `632 
F B "spi_prewrite" 2 791 "void(int16 data)" `631 
F N "spi_prewrite" 2 792 ""
V L "data" 2 792 "int32" `634 
F B "spi_prewrite" 2 792 "void(int32 data)" `633 
F N "spi_prewrite" 2 793 ""
V L "??65535" 2 793 "int8" `636 
V L "data" 2 793 "int8" `637 
F B "spi_prewrite" 2 793 "void(int8 ,int8 data)" `635 
F N "spi_prewrite" 2 794 ""
V L "??65535" 2 794 "int8" `639 
V L "data" 2 794 "int16" `640 
F B "spi_prewrite" 2 794 "void(int8 ,int16 data)" `638 
F N "spi_prewrite" 2 795 ""
V L "??65535" 2 795 "int8" `642 
V L "data" 2 795 "int32" `643 
F B "spi_prewrite" 2 795 "void(int8 ,int32 data)" `641 
F N "spi_xfer_in" 2 796 ""
F B "spi_xfer_in" 2 796 "int8()" `644 
F N "spi_xfer_in" 2 797 ""
f G "spi_xfer_in" 2 797 "int16(int8 bits)" `645 
F N "spi_xfer_in" 2 798 ""
f G "spi_xfer_in" 2 798 "int32(int8 bits)" `645 
F N "spi_xfer_in" 2 799 ""
V L "bits" 2 799 "int8" `646 
F B "spi_xfer_in" 2 799 "int8(int8 bits)" `645 
F N "spi_xfer_in" 2 800 ""
V L "bits" 2 800 "int8" `648 
f G "spi_xfer_in" 2 800 "int16(int8 bits,int8 bits)" `647 
F N "spi_xfer_in" 2 801 ""
V L "bits" 2 801 "int8" `648 
f G "spi_xfer_in" 2 801 "int32(int8 bits,int8 bits)" `647 
F N "spi_xfer_in" 2 802 ""
V L "stream" 2 802 "int8" `648 
V L "bits" 2 802 "int8" `649 
F B "spi_xfer_in" 2 802 "int8(int8 stream,int8 bits)" `647 
F N "spi_xfer_in" 2 803 ""
V L "stream" 2 803 "int8" `648 
V L "bits" 2 803 "int8" `652 
f G "spi_xfer_in" 2 803 "int16(int8 stream,int8 bits,int16 count)" `650 
F N "spi_xfer_in" 2 804 ""
V L "stream" 2 804 "int8" `648 
V L "bits" 2 804 "int8" `652 
f G "spi_xfer_in" 2 804 "int32(int8 stream,int8 bits,int16 count)" `650 
F N "spi_transfer" 2 805 ""
V L "wData" 2 805 "*int8" `651 
V L "rData" 2 805 "*int8" `652 
V L "count" 2 805 "int16" `653 
F B "spi_transfer" 2 805 "void(*int8 wData,*int8 rData,int16 count)" `650 
F N "spi_transfer" 2 806 ""
V L "stream" 2 806 "int8" `655 
V L "wData" 2 806 "*int8" `656 
V L "rData" 2 806 "*int8" `657 
V L "count" 2 806 "int16" `658 
F B "spi_transfer" 2 806 "void(int8 stream,*int8 wData,*int8 rData,int16 count)" `654 
F N "spi_transfer_write" 2 807 ""
V L "wData" 2 807 "*int8" `660 
V L "count" 2 807 "int16" `661 
F B "spi_transfer_write" 2 807 "void(*int8 wData,int16 count)" `659 
F N "spi_transfer_write" 2 808 ""
V L "stream" 2 808 "int8" `663 
V L "wData" 2 808 "*int8" `664 
V L "count" 2 808 "int16" `665 
F B "spi_transfer_write" 2 808 "void(int8 stream,*int8 wData,int16 count)" `662 
F N "spi_transfer_read" 2 809 ""
V L "rData" 2 809 "*int8" `667 
V L "count" 2 809 "int16" `668 
F B "spi_transfer_read" 2 809 "void(*int8 rData,int16 count)" `666 
F N "spi_transfer_read" 2 810 ""
V L "stream" 2 810 "int8" `670 
V L "rData" 2 810 "*int8" `671 
V L "count" 2 810 "int16" `672 
F B "spi_transfer_read" 2 810 "void(int8 stream,*int8 rData,int16 count)" `669  "#use rtos() Prototypes:"
F N "rtos_run" 2 813 ""
F B "rtos_run" 2 813 "void()" `673 
F N "rtos_yield" 2 814 ""
F B "rtos_yield" 2 814 "void()" `674 
F N "rtos_enable" 2 815 ""
V L "task" 2 815 "int8" `676 
F B "rtos_enable" 2 815 "void(int8 task)" `675 
F N "rtos_disable" 2 816 ""
V L "task" 2 816 "int8" `678 
F B "rtos_disable" 2 816 "void(int8 task)" `677 
F N "rtos_terminate" 2 817 ""
F B "rtos_terminate" 2 817 "void()" `679 
F N "rtos_await" 2 818 ""
V L "flag" 2 818 "int8" `681 
F B "rtos_await" 2 818 "void(int8 flag)" `680 
F N "rtos_wait" 2 819 ""
V L "sem" 2 819 "int8" `683 
F B "rtos_wait" 2 819 "void(int8 sem)" `682 
F N "rtos_signal" 2 820 ""
V L "sem" 2 820 "int8" `685 
F B "rtos_signal" 2 820 "void(int8 sem)" `684 
F N "rtos_msg_send" 2 821 ""
V L "task" 2 821 "int8" `687 
V L "msg" 2 821 "int8" `688 
F B "rtos_msg_send" 2 821 "void(int8 task,int8 msg)" `686 
F N "rtos_msg_read" 2 822 ""
F B "rtos_msg_read" 2 822 "int8()" `689 
F N "rtos_msg_poll" 2 823 ""
F B "rtos_msg_poll" 2 823 "int8()" `690 
F N "rtos_overrun" 2 824 ""
V L "task" 2 824 "int8" `692 
F B "rtos_overrun" 2 824 "int8(int8 task)" `691 
F N "rtos_stats" 2 825 ""
V L "task" 2 825 "int8" `694 
V L "stat" 2 825 "*int8" `695 
F B "rtos_stats" 2 825 "void(int8 task,*int8 stat)" `693  "#use timer() Prototypes:"
F N "get_ticks" 2 828 ""
F B "get_ticks" 2 828 "int8()" `696 
F N "get_ticks" 2 829 ""
f G "get_ticks" 2 829 "int16(int8 stream)" `697 
F N "get_ticks" 2 830 ""
f G "get_ticks" 2 830 "int32(int8 stream)" `697 
F N "get_ticks" 2 831 ""
V L "stream" 2 831 "int8" `698 
F B "get_ticks" 2 831 "int8(int8 stream)" `697 
F N "get_ticks" 2 832 ""
V L "stream" 2 832 "int8" `700 
f G "get_ticks" 2 832 "int16(int8 stream)" `699 
F N "get_ticks" 2 833 ""
V L "stream" 2 833 "int8" `700 
f G "get_ticks" 2 833 "int32(int8 stream)" `699 
F N "set_ticks" 2 834 ""
V L "value" 2 834 "int8" `700 
F B "set_ticks" 2 834 "void(int8 value)" `699 
F N "set_ticks" 2 835 ""
V L "value" 2 835 "int16" `702 
F B "set_ticks" 2 835 "void(int16 value)" `701 
F N "set_ticks" 2 836 ""
V L "value" 2 836 "int32" `704 
F B "set_ticks" 2 836 "void(int32 value)" `703 
F N "set_ticks" 2 837 ""
V L "stream" 2 837 "int8" `706 
V L "value" 2 837 "int8" `707 
F B "set_ticks" 2 837 "void(int8 stream,int8 value)" `705 
F N "set_ticks" 2 838 ""
V L "stream" 2 838 "int8" `709 
V L "value" 2 838 "int16" `710 
F B "set_ticks" 2 838 "void(int8 stream,int16 value)" `708 
F N "set_ticks" 2 839 ""
V L "stream" 2 839 "int8" `712 
V L "value" 2 839 "int32" `713 
F B "set_ticks" 2 839 "void(int8 stream,int32 value)" `711  "#use pwm() Prototypes:"
F N "pwm_on" 2 842 ""
F B "pwm_on" 2 842 "void()" `714 
F N "pwm_on" 2 843 ""
V L "stream" 2 843 "int8" `716 
F B "pwm_on" 2 843 "void(int8 stream)" `715 
F N "pwm_off" 2 844 ""
F B "pwm_off" 2 844 "void()" `717 
F N "pwm_off" 2 845 ""
V L "stream" 2 845 "int8" `719 
F B "pwm_off" 2 845 "void(int8 stream)" `718 
F N "pwm_set_duty" 2 846 ""
V L "duty" 2 846 "int16" `721 
F B "pwm_set_duty" 2 846 "void(int16 duty)" `720 
F N "pwm_set_duty" 2 847 ""
V L "stream" 2 847 "int8" `723 
V L "duty" 2 847 "int16" `724 
F B "pwm_set_duty" 2 847 "void(int8 stream,int16 duty)" `722 
F N "pwm_set_duty_percent" 2 848 ""
V L "percent" 2 848 "int16" `726 
F B "pwm_set_duty_percent" 2 848 "void(int16 percent)" `725 
F N "pwm_set_duty_percent" 2 849 ""
V L "stream" 2 849 "int8" `728 
V L "percent" 2 849 "int16" `729 
F B "pwm_set_duty_percent" 2 849 "void(int8 stream,int16 percent)" `727 
F N "pwm_set_frequency" 2 850 ""
V L "frequency" 2 850 "int32" `731 
F B "pwm_set_frequency" 2 850 "void(int32 frequency)" `730 
F N "pwm_set_frequency" 2 851 ""
V L "stream" 2 851 "int8" `733 
V L "frequency" 2 851 "int32" `734 
F B "pwm_set_frequency" 2 851 "void(int8 stream,int32 frequency)" `732 
F N "pwm_get_duty_period" 2 852 ""
F B "pwm_get_duty_period" 2 852 "int16()" `735 
F N "pwm_get_duty_period" 2 853 ""
V L "stream" 2 853 "int8" `737 
F B "pwm_get_duty_period" 2 853 "int16(int8 stream)" `736  "#use capture() Prototypes:"
F N "get_capture_time" 2 856 ""
F B "get_capture_time" 2 856 "int16()" `738 
F N "get_capture_time" 2 857 ""
V L "stream" 2 857 "int8" `740 
F B "get_capture_time" 2 857 "int16(int8 stream)" `739 
F N "get_capture_event" 2 858 ""
F B "get_capture_event" 2 858 "int8()" `741 
F N "get_capture_event" 2 859 ""
V L "stream" 2 859 "int8" `743 
F B "get_capture_event" 2 859 "int8(int8 stream)" `742  "Enviroment Prototypes:"
c L "get_capture_event" 2 3 2 "FUNCTION"
F N "goto_address" 2 872 ""
V L "address" 2 872 "int32" `745 
F B "goto_address" 2 872 "void(int32 address)" `744 
F N "label_address" 2 873 ""
V L "label" 2 873 "int32" `747 
F B "label_address" 2 873 "int32(int32 label)" `746  "Program Memory Read Prototypes:"
F N "read_program_memory" 2 876 ""
V L "address" 2 876 "int32" `749 
V L "DataPtr" 2 876 "*int8" `750 
V L "count" 2 876 "int16" `751 
F B "read_program_memory" 2 876 "void(int32 address,*int8 DataPtr,int16 count)" `748 
F N "read_program_eeprom" 2 877 ""
V L "address" 2 877 "int32" `753 
F B "read_program_eeprom" 2 877 "int16(int32 address)" `752  "Program Memory Write Prototypes:"
F N "write_program_memory" 2 880 ""
V L "address" 2 880 "int32" `755 
V L "DataPtr" 2 880 "*int8" `756 
V L "count" 2 880 "int16" `757 
F B "write_program_memory" 2 880 "void(int32 address,*int8 DataPtr,int16 count)" `754 
F N "write_program_eeprom" 2 881 ""
V L "address" 2 881 "int32" `759 
V L "data" 2 881 "int16" `760 
F B "write_program_eeprom" 2 881 "void(int32 address,int16 data)" `758  "EEPROM Prototypes:"
D G "__EEADDRESS__" 2 886 "unsigned int16"
F N "read_eeprom" 2 891 ""
V L "address" 2 891 "int16" `762 
F B "read_eeprom" 2 891 "int8(int16 address)" `761 
F N "write_eeprom" 2 892 ""
V L "address" 2 892 "int16" `764 
V L "value" 2 892 "int8" `765 
F B "write_eeprom" 2 892 "void(int16 address,int8 value)" `763  "INT"
c L "write_eeprom" 2 3 4 "FUNCTION"
F N "enable_interrupts" 2 899 ""
V L "interrupt" 2 899 "int32" `767 
F B "enable_interrupts" 2 899 "void(int32 interrupt)" `766 
F N "disable_interrupts" 2 900 ""
V L "interrupt" 2 900 "int32" `769 
F B "disable_interrupts" 2 900 "void(int32 interrupt)" `768 
F N "clear_interrupt" 2 901 ""
V L "interrupt" 2 901 "int32" `771 
F B "clear_interrupt" 2 901 "void(int32 interrupt)" `770 
F N "interrupt_active" 2 902 ""
V L "interrupt" 2 902 "int32" `773 
F B "interrupt_active" 2 902 "int8(int32 interrupt)" `772 
F N "interrupt_enabled" 2 903 ""
V L "interrupt" 2 903 "int32" `775 
F B "interrupt_enabled" 2 903 "int8(int32 interrupt)" `774 
F N "ext_int_edge" 2 904 ""
V L "source" 2 904 "int8" `777 
V L "edge" 2 904 "int8" `778 
F B "ext_int_edge" 2 904 "void(int8 source,int8 edge)" `776 
F N "jump_to_isr" 2 905 ""
V L "address" 2 905 "int16" `780 
F B "jump_to_isr" 2 905 "void(int16 address)" `779  "Constants used in EXT_INT_EDGE() are:"
D G "L_TO_H" 2 907 "0x40"
D G "H_TO_L" 2 908 "0"
D G "GLOBAL" 2 910 "0xF2C0"
D G "PERIPH" 2 911 "0xF240"
D G "INT_RTCC" 2 912 "0x00F220"
D G "INT_TIMER0" 2 913 "0x00F220"
D G "INT_TIMER1" 2 914 "0x009D01"
D G "INT_TIMER2" 2 915 "0x009D02"
D G "INT_TIMER3" 2 916 "0x00A002"
D G "INT_EXT_L2H" 2 917 "0x5000F210"
D G "INT_EXT_H2L" 2 918 "0x6000F210"
D G "INT_EXT" 2 919 "0x00F210"
D G "INT_EXT1_L2H" 2 920 "0x5001F008"
D G "INT_EXT1_H2L" 2 921 "0x6001F008"
D G "INT_EXT1" 2 922 "0x00F008"
D G "INT_EXT2_L2H" 2 923 "0x5002F010"
D G "INT_EXT2_H2L" 2 924 "0x6002F010"
D G "INT_EXT2" 2 925 "0x00F010"
D G "INT_RB" 2 926 "0x00FFF208"
D G "INT_PSP" 2 927 "0x009D80"
D G "INT_AD" 2 928 "0x009D40"
D G "INT_RDA" 2 929 "0x009D20"
D G "INT_TBE" 2 930 "0x009D10"
D G "INT_SSP" 2 931 "0x009D08"
D G "INT_CCP1" 2 932 "0x009D04"
D G "INT_CCP2" 2 933 "0x00A001"
D G "INT_BUSCOL" 2 934 "0x00A008"
D G "INT_LOWVOLT" 2 935 "0x00A004"
D G "INT_COMP" 2 936 "0x00A040"
D G "INT_EEPROM" 2 937 "0x00A010"
D G "INT_RDA2" 2 938 "0x00A320"
D G "INT_TBE2" 2 939 "0x00A310"
D G "INT_TIMER4" 2 940 "0x00A308"
D G "INT_CCP3" 2 941 "0x00A301"
D G "INT_CCP4" 2 942 "0x00A302"
D G "INT_CCP5" 2 943 "0x00A304"
D G "INT_OSCF" 2 944 "0x00A080"
D G "INT_BUSCOL2" 2 945 "0x00A340"
D G "INT_SSP2" 2 946 "0x00A380"
D G "INT_EXT3_L2H" 2 947 "0x5003F020"
D G "INT_EXT3_H2L" 2 948 "0x6003F020"
D G "INT_EXT3" 2 949 "0x00F020"
D G "_STDINT" 3 19 ""
C L "jump_to_isr" 3 2 1 "FUNCTION"
T G "int8_t" 3 23 "sint8" `781 
T G "uint8_t" 3 24 "int8" `782 
T G "int16_t" 3 25 "sint16" `783 
T G "uint16_t" 3 26 "int16" `784 
T G "int32_t" 3 27 "sint32" `785 
T G "uint32_t" 3 28 "int32" `786 
D G "INT8_MAX" 3 37 " (127)"
D G "INT8_MIN" 3 38 " (-128)"
D G "UINT8_MAX" 3 39 " (255)"
D G "INT16_MAX" 3 41 " (32767)"
D G "INT16_MIN" 3 42 " (-32768)"
D G "UINT16_MAX" 3 43 " (65535)"
D G "INT32_MAX" 3 45 " (2147483647)"
D G "INT32_MIN" 3 46 " (-2147483648)"
D G "UINT32_MAX" 3 47 " (4294967295)"
C L "jump_to_isr" 3 2 1 "FUNCTION"
T G "int_least8_t" 3 61 "sint8" `787 
T G "uint_least8_t" 3 62 "int8" `788 
T G "int_least16_t" 3 63 "sint16" `789 
T G "uint_least16_t" 3 64 "int16" `790 
T G "int_least32_t" 3 65 "sint32" `791 
T G "uint_least32_t" 3 66 "int32" `792 
D G "INT_LEAST8_MAX" 3 75 " (127)"
D G "INT_LEAST8_MIN" 3 76 " (-128)"
D G "UINT_LEAST8_MAX" 3 77 " (255)"
D G "INT_LEAST16_MAX" 3 79 " (32767)"
D G "INT_LEAST16_MIN" 3 80 " (-32768)"
D G "UINT_LEAST16_MAX" 3 81 " (65535)"
D G "INT_LEAST32_MAX" 3 83 " (2147483647)"
D G "INT_LEAST32_MIN" 3 84 " (-2147483648)"
D G "UINT_LEAST32_MAX" 3 85 " (4294967295)"
C L "jump_to_isr" 3 2 1 "FUNCTION"
T G "int_fast8_t" 3 112 "sint8" `793 
T G "uint_fast8_t" 3 113 "int8" `794 
D G "INT_FAST8_MAX" 3 114 " (127)"
D G "INT_FAST8_MIN" 3 115 " (-128)"
D G "UINT_FAST8_MAX" 3 116 " (255)"
T G "int_fast16_t" 3 117 "sint16" `795 
T G "uint_fast16_t" 3 118 "int16" `796 
T G "int_fast32_t" 3 121 "sint32" `797 
T G "uint_fast32_t" 3 122 "int32" `798 
D G "INT_FAST16_MAX" 3 124 " (32767)"
D G "INT_FAST16_MIN" 3 125 " (-32768)"
D G "UINT_FAST16_MAX" 3 126 " (65535)"
D G "INT_FAST32_MAX" 3 128 " (2147483647)"
D G "INT_FAST32_MIN" 3 129 " (-2147483648)"
D G "UINT_FAST32_MAX" 3 130 " (4294967295)"
C L "jump_to_isr" 3 2 1 "FUNCTION"
T G "uintptr_t" 3 148 "int16" `799 
T G "intptr_t" 3 149 "sint16" `800 
D G "INT8_C" 3 152 "(val) ((int8_t)val)"
D G "UINT8_C" 3 153 "(val) ((uint8_t)val)"
D G "INT16_C" 3 154 "(val) ((int16_t)val)"
D G "UINT16_C" 3 155 "(val) ((uint16_t)val)"
D G "INT32_C" 3 156 "(val) ((int32_t)val)"
D G "UINT32_C" 3 157 "(val) ((uint32_t)val)"
C L "jump_to_isr" 3 2 3 "FUNCTION"
T G "intmax_t" 3 181 "sint32" `801 
T G "uintmax_t" 3 182 "int32" `802 
D G "INTMAXN_MAX" 3 184 " (2147483647)"
D G "INTMAXN_MIN" 3 185 " (-2147483648)"
D G "UINTMAXN_MAX" 3 186 " (4294967295)"
D G "INTMAX_C" 3 188 "(value) ((signed int32)val)"
D G "UINTMAX_C" 3 189 "(value) ((unsigned int32)val)"
D G "__TV_PICKIT2_SHIFT_1_C__" 4 2 ""
D G "__TV_PICKIT2_SHIFT_1_H__" 5 2 ""
C L "jump_to_isr" 5 4 5 "FUNCTION"
D G "MATH_H" 6 30 ""
D G "PI" 6 35 "3.1415926535897932"
D G "SQRT2" 6 38 "1.4142135623730950"
C L "jump_to_isr" 6 2 3 "FUNCTION"
F N "CEIL_FLOOR" 6 45 ""
V L "x" 6 45 "float" `808 
V L "n" 6 45 "int8" `809 
F G "CEIL_FLOOR" 6 46 "float(float x,int8 n)" `807 
V L "y" 6 47 "float" `810 
V L "res" 6 47 "float" `811 
V L "l" 6 48 "int16" `812 
V L "s" 6 49 "int1" `813 
C L "floor" 6 2 5 "FUNCTION"
F N "floor" 6 207 ""
V L "x" 6 207 "float" `828 
F G "floor" 6 208 "float(float x)" `827 
C L "ceil" 6 2 5 "FUNCTION"
F N "ceil" 6 233 ""
V L "x" 6 233 "float" `830 
F G "ceil" 6 234 "float(float x)" `829 
D G "fabs" 6 259 "abs"
C L "fmod" 6 2 6 "FUNCTION"
F N "fmod" 6 271 ""
V L "x" 6 271 "float" `832 
V L "y" 6 271 "float" `833 
F G "fmod" 6 272 "float(float x,float y)" `831 
V L "i" 6 273 "float" `834 
D G "LN2" 6 334 "0.6931471805599453"
D G "LN2_INV" 6 335 "1.4426950408889634073"
V G "pe" 6 337 "[6]" `839 
F N "exp" 6 341 ""
V L "x" 6 341 "float" `842 
F G "exp" 6 342 "float(float x)" `841 
V L "y" 6 343 "float" `843 
V L "res" 6 343 "float" `844 
V L "r" 6 343 "float" `845 
V L "n" 6 347 "sint8" `846 
V L "s" 6 348 "int1" `847 
C L "exp" 6 2 1 "FUNCTION"
V G "pl" 6 525 "[4]" `851 
V G "ql" 6 526 "[4]" `854 
C L "log" 6 2 3 "FUNCTION"
F N "log" 6 534 ""
V L "x" 6 534 "float" `857 
F G "log" 6 535 "float(float x)" `856 
V L "y" 6 536 "float" `858 
V L "res" 6 536 "float" `859 
V L "r" 6 536 "float" `860 
V L "y2" 6 536 "float" `861 
V L "n" 6 540 "sint8" `862 
C L "log" 6 2 1 "FUNCTION"
D G "LN10" 6 758 "2.3025850929940456"
D G "LN10_INV" 6 759 "0.4342944819032518276"
C L "log10" 6 2 3 "FUNCTION"
F N "log10" 6 767 ""
V L "x" 6 767 "float" `864 
F G "log10" 6 768 "float(float x)" `863 
V L "r" 6 769 "float" `865 
C L "modf" 6 2 8 "FUNCTION"
F N "modf" 6 808 ""
V L "value" 6 808 "float" `867 
V L "iptr" 6 808 "*float" `868 
F G "modf" 6 809 "float(float value,*float iptr)" `866 
C L "pwr" 6 2 6 "FUNCTION"
F N "pwr" 6 836 ""
V L "x" 6 836 "float" `870 
V L "y" 6 836 "float" `871 
F G "pwr" 6 837 "float(float x,float y)" `869 
C L "pow" 6 2 7 "FUNCTION"
F N "pow" 6 899 ""
V L "x" 6 899 "float" `873 
V L "y" 6 899 "float" `874 
F G "pow" 6 900 "float(float x,float y)" `872 
C L "sqrt" 6 2 5 "FUNCTION"
F N "sqrt" 6 960 ""
V L "x" 6 960 "float" `876 
F G "sqrt" 6 961 "float(float x)" `875 
V L "y" 6 962 "float" `877 
V L "res" 6 962 "float" `878 
V L "p" 6 967 "*int8" `879 
D G "PI_DIV_BY_TWO_INV" 6 1156 "0.63661977236758134"
D G "PI_DIV_BY_TWO" 6 1160 "1.5707963267948966"
D G "TWOBYPI" 6 1164 "0.6366197723675813"
C L "cos" 6 2 3 "FUNCTION"
F N "cos" 6 1172 ""
V L "x" 6 1172 "float" `881 
F G "cos" 6 1173 "float(float x)" `880 
V L "y" 6 1174 "float" `882 
V L "t" 6 1174 "float" `883 
V L "t2" 6 1174 "float" `884 
V L "quad" 6 1175 "int8" `885 
V L "i" 6 1175 "int8" `886 
V L "frac" 6 1176 "float" `887 
V L "p" 6 1177 "float[5]" `888  "by the series definition for cosine"
C L "cos" 6 2 1 "FUNCTION"
C L "cos" 6 2 2 "FUNCTION"
C L "cos" 6 2 1 "FUNCTION"
C L "cos" 6 2 1 "FUNCTION"
C L "cos" 6 2 1 "FUNCTION"
C L "cos" 6 2 1 "FUNCTION"
C L "cos" 6 2 1 "FUNCTION"
C L "cos" 6 2 1 "FUNCTION"
C L "sin" 6 2 5 "FUNCTION"
F N "sin" 6 1311 ""
V L "x" 6 1311 "float" `890 
F G "sin" 6 1312 "float(float x)" `889 
C L "tan" 6 2 5 "FUNCTION"
F N "tan" 6 1337 ""
V L "x" 6 1337 "float" `892 
F G "tan" 6 1338 "float(float x)" `891 
V L "c" 6 1339 "float" `893 
V L "s" 6 1339 "float" `894 
V G "pas" 6 1377 "[3]" `896 
V G "qas" 6 1378 "[3]" `899 
F N "ASIN_COS" 6 1380 ""
V L "x" 6 1380 "float" `902 
V L "n" 6 1380 "int8" `903 
F G "ASIN_COS" 6 1381 "float(float x,int8 n)" `901 
V L "y" 6 1382 "float" `904 
V L "res" 6 1382 "float" `905 
V L "r" 6 1382 "float" `906 
V L "y2" 6 1382 "float" `907 
V L "s" 6 1383 "int1" `908 
C L "ASIN_COS" 6 2 1 "FUNCTION"
C L "ASIN_COS" 6 2 1 "FUNCTION"
C L "asin" 6 2 5 "FUNCTION"
F N "asin" 6 1538 ""
V L "x" 6 1538 "float" `910 
F G "asin" 6 1539 "float(float x)" `909 
V L "r" 6 1540 "float" `911 
C L "acos" 6 2 5 "FUNCTION"
F N "acos" 6 1572 ""
V L "x" 6 1572 "float" `913 
F G "acos" 6 1573 "float(float x)" `912 
V L "r" 6 1574 "float" `914 
V G "pat" 6 1600 "[4]" `916 
V G "qat" 6 1601 "[4]" `919 
C L "atan" 6 2 3 "FUNCTION"
F N "atan" 6 1609 ""
V L "x" 6 1609 "float" `922 
F G "atan" 6 1610 "float(float x)" `921 
V L "y" 6 1611 "float" `923 
V L "res" 6 1611 "float" `924 
V L "r" 6 1611 "float" `925 
V L "s" 6 1612 "int1" `926 
V L "flag" 6 1612 "int1" `927 
C L "atan" 6 2 1 "FUNCTION"
C L "atan2" 6 2 7 "FUNCTION"
F N "atan2" 6 1752 ""
V L "y" 6 1752 "float" `929 
V L "x" 6 1752 "float" `930 
F G "atan2" 6 1753 "float(float y,float x)" `928 
V L "z" 6 1754 "float" `931 
V L "sign" 6 1755 "int1" `932 
V L "quad" 6 1756 "int8" `933 
C L "atan2" 6 2 1 "FUNCTION"
C L "atan2" 6 2 1 "FUNCTION"
C L "cosh" 6 2 7 "FUNCTION"
F N "cosh" 6 1974 ""
V L "x" 6 1974 "float" `936 
F G "cosh" 6 1975 "float(float x)" `935 
C L "sinh" 6 2 6 "FUNCTION"
F N "sinh" 6 2001 ""
V L "x" 6 2001 "float" `938 
F G "sinh" 6 2002 "float(float x)" `937 
C L "tanh" 6 2 6 "FUNCTION"
F N "tanh" 6 2031 ""
V L "x" 6 2031 "float" `940 
F G "tanh" 6 2032 "float(float x)" `939 
D G "LOG2" 6 2061 ".30102999566398119521"
D G "LOG2_INV" 6 2062 "3.32192809488736234787"
F N "frexp" 6 2063 ""
V L "x" 6 2063 "float" `942 
V L "exp" 6 2063 "*sint8" `943 
F G "frexp" 6 2064 "float(float x,*sint8 exp)" `941 
V L "res" 6 2065 "float" `944 
V L "sign" 6 2066 "int1" `945 
C L "ldexp" 6 2 6 "FUNCTION"
F N "ldexp" 6 2208 ""
V L "value" 6 2208 "float" `947 
V L "exp" 6 2208 "sint8" `948 
F G "ldexp" 6 2209 "float(float value,sint8 exp)" `946 
D G "soft_i2c_sda" 5 13 "pin_c4"
D G "soft_i2c_scl" 5 14 "pin_c3"
D G "BT0" 5 15 "PIN_b4"
D G "BT1" 5 16 "PIN_b5"
D G "BT2" 5 17 "PIN_b6"
D G "BT3" 5 18 "PIN_b7"
D G "ON" 5 19 "BT0"
D G "UP" 5 20 "BT0"
D G "ON1" 5 21 "BT0"
D G "OFF" 5 22 "BT1"
D G "DW" 5 23 "BT1"
D G "OFF1" 5 24 "BT1"
D G "INV" 5 25 "BT2"
D G "ON2" 5 26 "BT2"
D G "CLR" 5 27 "BT2"
D G "MOD" 5 28 "BT3"
D G "STOP" 5 29 "BT3"
D G "OFF2" 5 30 "BT3"
E G "OK" 5 34 "0" `950 
E G "ERR" 5 35 "1" `951 
T G "result" 5 35 "" `952 
V G "MA7DOAN" 5 36 "[16]" `954 
V G "LED_7DQ" 5 38 "int8[8]" `956 
F N "xuat_32led_don_4byte" 5 39 ""
V L "b3" 5 39 "int8" `958 
V L "b2" 5 39 "int8" `959 
V L "b1" 5 39 "int8" `960 
V L "b0" 5 39 "int8" `961 
f G "xuat_32led_don_4byte" 5 39 "void(int8 b3,int8 b2,int8 b1,int8 b0)" `957 
F N "xuat_32led_don_2word" 5 40 ""
V L "w1" 5 40 "int16" `963 
V L "w0" 5 40 "int16" `964 
f G "xuat_32led_don_2word" 5 40 "void(int16 w1,int16 w0)" `962 
F N "xuat_32led_don_1dw" 5 41 ""
V L "dwl" 5 41 "int32" `966 
f G "xuat_32led_don_1dw" 5 41 "void(int32 dwl)" `965 
F N "inputcd" 5 42 ""
V L "pin" 5 42 "int16" `968 
f G "inputcd" 5 42 "int8(int16 pin)" `967 
F N "xuat_4led_7doan_4so" 5 43 ""
V L "b3" 5 43 "int8" `970 
V L "b2" 5 43 "int8" `971 
V L "b1" 5 43 "int8" `972 
V L "b0" 5 43 "int8" `973 
f G "xuat_4led_7doan_4so" 5 43 "void(int8 b3,int8 b2,int8 b1,int8 b0)" `969 
F N "xuat_4led_7doan_giaima_xoa_so0" 5 44 ""
V L "tam" 5 44 "int16" `975 
f G "xuat_4led_7doan_giaima_xoa_so0" 5 44 "void(int16 tam)" `974 
F N "xuat_8led_7doan_2byte" 5 45 ""
V L "data" 5 45 "int8" `977 
V L "maquet" 5 45 "int8" `978 
f G "xuat_8led_7doan_2byte" 5 45 "void(int8 data,int8 maquet)" `976 
F N "hien_thi_8led_7doan_quet_all" 5 46 ""
f G "hien_thi_8led_7doan_quet_all" 5 46 "void()" `979 
F N "set_up_port_ic_chot" 5 47 ""
f G "set_up_port_ic_chot" 5 47 "void()" `980 
F N "buzzer_on" 4 4 ""
F G "buzzer_on" 4 5 "void()" `981 
F N "buzzer_off" 4 8 ""
F G "buzzer_off" 4 9 "void()" `982 
F N "xuat_32led_don_4byte" 4 12 ""
V L "b3" 4 12 "int8" `958 
V L "b2" 4 12 "int8" `959 
V L "b1" 4 12 "int8" `960 
V L "b0" 4 12 "int8" `987 
F G "xuat_32led_don_4byte" 4 13 "void(int8 b3,int8 b2,int8 b1,int8 b0)" `957 
F N "xuat_32led_don_2word" 4 18 ""
V L "w1" 4 18 "int16" `963 
V L "w0" 4 18 "int16" `985 
F G "xuat_32led_don_2word" 4 19 "void(int16 w1,int16 w0)" `962 
F N "xuat_32led_don_1dw" 4 24 ""
V L "dwl" 4 24 "int32" `984 
F G "xuat_32led_don_1dw" 4 25 "void(int32 dwl)" `965 
F N "inputcd" 4 31 ""
V L "pin" 4 31 "int16" `984 
F G "inputcd" 4 32 "int8(int16 pin)" `967 
V L "n" 4 33 "int8" `983 
V L "oldpin" 4 34 "int16" `984 
V L "tt" 4 35 "int1" `985 
V L "dem" 4 36 "int1" `986 
F N "xuat_4led_7doan_4so" 4 63 ""
V L "b3" 4 63 "int8" `970 
V L "b2" 4 63 "int8" `971 
V L "b1" 4 63 "int8" `972 
V L "b0" 4 63 "int8" `998 
F G "xuat_4led_7doan_4so" 4 64 "void(int8 b3,int8 b2,int8 b1,int8 b0)" `969 
F N "xuat_4led_7doan_giaima_xoa_so0" 4 70 ""
V L "tam" 4 70 "int16" `995 
F G "xuat_4led_7doan_giaima_xoa_so0" 4 71 "void(int16 tam)" `974 
V L "ht" 4 72 "int8[4]" `994 
V L "i" 4 72 "int8" `995 
F N "hien_thi_8led_7doan_quet_all" 4 82 ""
F G "hien_thi_8led_7doan_quet_all" 4 83 "void()" `979 
V L "n" 4 84 "int8" `999 
F N "triac_2_on" 4 95 ""
F G "triac_2_on" 4 96 "void()" `1000 
F N "triac_2_off" 4 99 ""
F G "triac_2_off" 4 100 "void()" `1001 
F N "set_up_port_ic_chot" 4 103 ""
F G "set_up_port_ic_chot" 4 104 "void()" `980 
C L "set_up_port_ic_chot" 4 112 1 "FUNCTION"
C L "set_up_port_ic_chot" 4 112 1 "FUNCTION"
C L "soft_i2c_clk" 4 112 1 "FUNCTION"
F N "soft_i2c_clk" 4 124 ""
F G "soft_i2c_clk" 4 125 "void()" `1002 
F N "soft_i2c_start" 4 130 ""
F G "soft_i2c_start" 4 131 "void()" `1003 
F N "soft_i2c_stop" 4 139 ""
F G "soft_i2c_stop" 4 140 "void()" `1004 
F N "soft_i2c_write" 4 146 ""
V L "b" 4 146 "int8" `1006 
F G "soft_i2c_write" 4 147 "void(int8 b)" `1005 
V L "m" 4 148 "int8" `1007 
F N "soft_i2c_read" 4 157 ""
V L "ack" 4 157 "int8" `1009 
F G "soft_i2c_read" 4 158 "int8(int8 ack)" `1008 
V L "n" 4 159 "int8" `1010 
V L "nhan" 4 159 "int8" `1011 
V G "y" 7 1 "int32" `1012 
V G "yp_chay" 7 1 "int32" `1013 
V G "yt_chay" 7 1 "int32" `1014 
V G "y_codinh" 7 1 "int32" `1015 
V G "zt" 7 2 "int16" `1016 
V G "zt_chay_t" 7 2 "int16" `1017 
V G "zt_chay_p" 7 2 "int16" `1018 
V G "zt_codinh" 7 2 "int16" `1019 
V G "zp" 7 3 "int16" `1020 
V G "zp_chay_t" 7 3 "int16" `1021 
V G "zp_chay_p" 7 3 "int16" `1022 
V G "zp_codinh" 7 3 "int16" `1023 
V G "tgdlay" 7 5 "int16" `1024 
V G "dem_led" 7 6 "int8" `1025 
V G "i32" 7 7 "sint8" `1026 
V G "j32" 7 7 "sint8" `1027 
V G "ttct_td" 7 7 "sint8" `1028 
V G "i16" 7 7 "sint8" `1029 
V G "j16" 7 7 "sint8" `1030 
V G "za" 7 9 "int32" `1031 
V G "ya" 7 9 "int32" `1032 
V G "xa" 7 9 "int32" `1033 
V G "zb" 7 9 "int32" `1034 
V G "yb" 7 9 "int32" `1035 
V G "xb" 7 9 "int32" `1036 
V G "ia" 7 10 "sint8" `1037 
V G "ja" 7 10 "sint8" `1038 
F N "reset_toan_bo_bien" 7 11 ""
F G "reset_toan_bo_bien" 7 12 "void()" `1039 
C L "reset_toan_bo_bien" 7 13 1 "FUNCTION"
F N "tang_dem_led_delay_1" 7 25 ""
V L "dl" 7 25 "int8" `1041 
F G "tang_dem_led_delay_1" 7 26 "void(int8 dl)" `1040 
V L "i" 7 27 "int8" `1042 
F N "tang_dem_led_delay_0" 7 33 ""
V L "dl" 7 33 "int8" `1044 
F G "tang_dem_led_delay_0" 7 34 "void(int8 dl)" `1043 
F N "delay_chon" 7 39 ""
V L "dl" 7 39 "int8" `1046 
V L "chondelay" 7 39 "int8" `1047 
F G "delay_chon" 7 40 "void(int8 dl,int8 chondelay)" `1045 
C L "diem_sang_dich_trai_mat_dan_32led" 7 13 3 "FUNCTION"
F N "diem_sang_dich_trai_mat_dan_32led" 7 47 ""
V L "dl" 7 47 "int8" `1049 
V L "chondelay" 7 47 "int8" `1050 
F G "diem_sang_dich_trai_mat_dan_32led" 7 48 "void(int8 dl,int8 chondelay)" `1048 
C L "diem_sang_dich_phai_mat_dan_32led" 7 13 3 "FUNCTION"
F N "diem_sang_dich_phai_mat_dan_32led" 7 73 ""
V L "dl" 7 73 "int8" `1052 
V L "chondelay" 7 73 "int8" `1053 
F G "diem_sang_dich_phai_mat_dan_32led" 7 74 "void(int8 dl,int8 chondelay)" `1051 
C L "dao_dl_32bit_va_xuat" 7 13 3 "FUNCTION"
F N "dao_dl_32bit_va_xuat" 7 99 ""
F G "dao_dl_32bit_va_xuat" 7 100 "void()" `1054 
F N "sang_tat_32led" 7 104 ""
V L "dl" 7 104 "int8" `1056 
V L "chondelay" 7 104 "int8" `1057 
F G "sang_tat_32led" 7 105 "void(int8 dl,int8 chondelay)" `1055 
C L "sang_tat_dan_ngoai_vao_32led" 7 13 3 "FUNCTION"
F N "sang_tat_dan_ngoai_vao_32led" 7 120 ""
V L "dl" 7 120 "int8" `1059 
V L "chondelay" 7 120 "int8" `1060 
F G "sang_tat_dan_ngoai_vao_32led" 7 121 "void(int8 dl,int8 chondelay)" `1058 
C L "sang_tat_dan_trong_ra_32led" 7 13 3 "FUNCTION"
F N "sang_tat_dan_trong_ra_32led" 7 142 ""
V L "dl" 7 142 "int8" `1062 
V L "chondelay" 7 142 "int8" `1063 
F G "sang_tat_dan_trong_ra_32led" 7 143 "void(int8 dl,int8 chondelay)" `1061 
C L "sang_tat_dan_phai_sang_trai_2x16led" 7 13 3 "FUNCTION"
F N "sang_tat_dan_phai_sang_trai_2x16led" 7 164 ""
V L "dl" 7 164 "int8" `1065 
V L "chondelay" 7 164 "int8" `1066 
F G "sang_tat_dan_phai_sang_trai_2x16led" 7 165 "void(int8 dl,int8 chondelay)" `1064 
C L "sang_tat_dan_trai_sang_phai_2x16led" 7 13 3 "FUNCTION"
F N "sang_tat_dan_trai_sang_phai_2x16led" 7 184 ""
V L "dl" 7 184 "int8" `1068 
V L "chondelay" 7 184 "int8" `1069 
F G "sang_tat_dan_trai_sang_phai_2x16led" 7 185 "void(int8 dl,int8 chondelay)" `1067 
C L "sang_tat_dan_pst_32led" 7 13 3 "FUNCTION"
F N "sang_tat_dan_pst_32led" 7 204 ""
V L "dl" 7 204 "int8" `1071 
V L "chondelay" 7 204 "int8" `1072 
F G "sang_tat_dan_pst_32led" 7 205 "void(int8 dl,int8 chondelay)" `1070 
C L "sang_tat_dan_tsp_32led" 7 13 3 "FUNCTION"
F N "sang_tat_dan_tsp_32led" 7 224 ""
V L "dl" 7 224 "int8" `1074 
V L "chondelay" 7 224 "int8" `1075 
F G "sang_tat_dan_tsp_32led" 7 225 "void(int8 dl,int8 chondelay)" `1073 
C L "diem_sang_di_chuyen_pst_32led" 7 13 3 "FUNCTION"
F N "diem_sang_di_chuyen_pst_32led" 7 245 ""
V L "dl" 7 245 "int8" `1077 
V L "chondelay" 7 245 "int8" `1078 
F G "diem_sang_di_chuyen_pst_32led" 7 246 "void(int8 dl,int8 chondelay)" `1076 
C L "diem_sang_di_chuyen_tsp_32led" 7 13 3 "FUNCTION"
F N "diem_sang_di_chuyen_tsp_32led" 7 266 ""
V L "dl" 7 266 "int8" `1080 
V L "chondelay" 7 266 "int8" `1081 
F G "diem_sang_di_chuyen_tsp_32led" 7 267 "void(int8 dl,int8 chondelay)" `1079 
C L "sang_don_pst_32led" 7 13 3 "FUNCTION"
F N "sang_don_pst_32led" 7 287 ""
V L "dl" 7 287 "int8" `1083 
V L "chondelay" 7 287 "int8" `1084 
F G "sang_don_pst_32led" 7 288 "void(int8 dl,int8 chondelay)" `1082 
C L "sang_don_tsp_32led" 7 13 3 "FUNCTION"
F N "sang_don_tsp_32led" 7 312 ""
V L "dl" 7 312 "int8" `1086 
V L "chondelay" 7 312 "int8" `1087 
F G "sang_don_tsp_32led" 7 313 "void(int8 dl,int8 chondelay)" `1085 
C L "sang_don_tnt_32led" 7 13 3 "FUNCTION"
F N "sang_don_tnt_32led" 7 338 ""
V L "dl" 7 338 "int8" `1089 
V L "chondelay" 7 338 "int8" `1090 
F G "sang_don_tnt_32led" 7 339 "void(int8 dl,int8 chondelay)" `1088 
C L "sang_don_ttr_32led" 7 13 3 "FUNCTION"
F N "sang_don_ttr_32led" 7 368 ""
V L "dl" 7 368 "int8" `1092 
V L "chondelay" 7 368 "int8" `1093 
F G "sang_don_ttr_32led" 7 369 "void(int8 dl,int8 chondelay)" `1091 
V G "systemTick" 0 7 "uintmax_t" `1096 
V G "trangThaiLed" 0 8 "int8" `1097  "bien trang thai"
V G "testTrangThai" 0 9 "int1" `1098 
V G "bienDem" 0 10 "int8" `1099 
V G "hangDonVi" 0 11 "int8" `1100 
V G "hangChuc" 0 12 "int8" `1101 
F N "ngatTimer1" 0 17 ""
F G "ngatTimer1" 0 18 "void()" `1102 
F N "hardwareInit" 0 25 ""
F G "hardwareInit" 0 26 "void()" `1103 
F N "MAIN" 0 38 ""
F G "MAIN" 0 39 "void()" `1104 
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "scanf" 1 255
F B "fscanf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "profileout" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "interrupt_enabled" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "output_f" 1 0
F B "output_g" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "input_f" 0 0
F B "input_g" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "set_tris_f" 1 0
F B "set_tris_g" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "get_tris_f" 0 0
F B "get_tris_g" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "input_change_f" 0 0
F B "input_change_g" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "get_adc_ports" 0 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "set_analog_pins" 1 2
F B "get_capture" 0 1
F B "set_compare_time" 1 2
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_timer_4" 3 0
F B "get_timer4" 0 0
F B "set_timer4" 1 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 2
F B "set_pwm2_duty" 1 0
F B "setup_ccp3" 1 2
F B "set_pwm3_duty" 1 0
F B "setup_ccp4" 1 0
F B "set_pwm4_duty" 1 0
F B "setup_ccp5" 1 0
F B "set_pwm5_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 0 2
F B "pll_locked" 0 0
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 2
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 2
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "spi_xfer" 0 3
F B "spi_transfer" 3 4
F B "spi_transfer_write" 2 3
F B "spi_transfer_read" 2 3
F B "spi_speed" 1 3
F B "spi_init" 1 2

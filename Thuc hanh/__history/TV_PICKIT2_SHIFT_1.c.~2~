#ifndef    __tv_pickit2_shift_1_c__
#define    __tv_pickit2_shift_1_c__
#include<tv_pickit2_shift_1.h>
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    
//XUAT 1 BYTE RA THANH GHI DICH
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    
VOID XUAT_1BYTE(UNSIGNED INT8 BYTEXUAT)
{
   UNSIGNED INT8   SB,X;   
   #BIT BSERI  = X.7
   X = BYTEXUAT;
   FOR (SB=0;SB<8;SB++)
      {                                                 
         OUTPUT_BIT(SSDO,BSERI);    
         OUTPUT_LOW(SSCK); OUTPUT_HIGH(SSCK);
         X= X<<1;         
     }
}
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
//HAM 301
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//CHUONG TRINH CON XUAT 4 BYTE RA 32 LED DON
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID XUAT_32LED_DON_4BYTE(UNSIGNED INT8 BLD3,BLD2,BLD1,BLD0)
{     
      XUAT_1BYTE(BLD3);          
      XUAT_1BYTE(BLD2);
      XUAT_1BYTE(BLD1);          
      XUAT_1BYTE(BLD0);            
      MO_32_LED_DON;      
      MO_IC_74573_A_THONG_DL();            
      OUTPUT_HIGH(RCK_32LED);    OUTPUT_LOW(RCK_32LED);
      CHOT_IC_74573_A_GOI_DU_LIEU;      
}
//HAM 302
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//CHUONG TRINH CON XUAT 2 WORD 16 BITRA 32 LED DON
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID XUAT_32LED_DON_2WORD(UNSIGNED INT16 WLD1, UNSIGNED INT16 WLD0)
{     
     UNSIGNED INT8  B3,B2,B1,B0;
     B3 = WLD1>>8;  B2 = WLD1; 
     B1 = WLD0>>8;  B0 = WLD0;
     XUAT_32LED_DON_4BYTE(B3,B2,B1,B0);
}
//HAM 303
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//CHUONG TRINH CON XUAT 1 DOUBLE WORD RA 32 LED DON
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID XUAT_32LED_DON_1DW(UNSIGNED LONG LONG DWLD)
{     
     UNSIGNED INT16  WD1,WD0;
     WD1 = DWLD>>16;  WD0 = DWLD;
     XUAT_32LED_DON_2WORD(WD1,WD0);
}

//HAM 304
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//CHUONG TRINH CON MO 32 LED DON SANG
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID MO_32LED_DON()
{        
     XUAT_32LED_DON_1DW(0XFFFFFFFF);
}
//HAM 305
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//CHUONG TRINH CON TAT 32 LED DON 
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID TAT_32LED_DON()
{        
     XUAT_32LED_DON_1DW(0);
}
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    
//XUAT 1 BIT ROI TRA LAI KET QUA SAU KHI DICH DI 1 BIT
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    
UNSIGNED  INT8 XUAT_1BIT(UNSIGNED INT8 BYTEXUAT)
{
      UNSIGNED INT8   XBITX;   
      #BIT BSERIX  = XBITX.0
      XBITX = BYTEXUAT;
                                            
      OUTPUT_BIT(SSDO,BSERIX);    
      OUTPUT_LOW(SSCK); OUTPUT_HIGH(SSCK);
      XBITX= XBITX>>1;   
      RETURN(XBITX);  
}
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
//HAM 101
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    
//HAM KHOI TAO CAC PORT VA IC CHOT
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    
VOID SET_UP_PORT_IC_CHOT()
{     
      SET_TRIS_D(0x00);    
      SET_TRIS_E(0X00);
      OUTPUT_D(0XFF);
      TIN_HIEU_DK_74573_A=0XFF;  
      TIN_HIEU_DK_74573_B=0XFF;      
      CHOT_IC_74573_A_GOI_DU_LIEU;
      CHOT_IC_74573_B_GOI_DU_LIEU;  
      RBDC=0;
}
//HAM 104
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    
//XUAT CÁC THIEU DIEU KHIEN 
//GIU NGUYEN CAC TRANG THAI CUA 2 MODULE KHAC
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    
VOID MO_IC_74573_A_THONG_DL()
{     
      OUTPUT_D(0X00);
      OUTPUT_BIT(G_32LED,G_32A);
      OUTPUT_BIT(G_4LED7DOAN,G_4A);
      OUTPUT_BIT(G_LCD20X4,G_LCDA);  
      CHO_IC_74573_A_GOI_DU_LIEU;
}
VOID MO_IC_74573_B_THONG_DL()
{     
      OUTPUT_D(0X00);
      OUTPUT_BIT(G_MATRANLED,G_MTB);
      OUTPUT_BIT(G_8LEDQUET,G_8B);
      OUTPUT_BIT(G_BUZERELAY,G_RBDCB); 
      CHO_IC_74573_B_GOI_DU_LIEU;
}
//ham 401
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//CHUONG TRINH CON XUAT 4 BYTE RA 4 LED 7 DOAN
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID XUAT_4LED_7DOAN_4SO(UNSIGNED INT BL743,BL742,BL741,BL740)
{     
      XUAT_1BYTE(BL740);   XUAT_1BYTE(BL741);
      XUAT_1BYTE(BL742);   XUAT_1BYTE(BL743);
      
      MO_4_LED_7DOAN;
      MO_IC_74573_A_THONG_DL();
       
      OUTPUT_LOW(RCK_4LED7DOAN);   OUTPUT_HIGH(RCK_4LED7DOAN); 
      CHOT_IC_74573_A_GOI_DU_LIEU;
}
//ham 404
VOID XUAT_4LED_7DOAN_3SO(UNSIGNED INT BL742,BL741,BL740)
{     
     XUAT_4LED_7DOAN_4SO(0XFF,BL742,BL741,BL740);
}
//ham 403
VOID XUAT_4LED_7DOAN_2SO(UNSIGNED INT BL741,BL740)
{     
     XUAT_4LED_7DOAN_4SO(0XFF,0XFF,BL741,BL740);
}
//ham 402
VOID XUAT_4LED_7DOAN_1SO(UNSIGNED INT BL740)
{     
     XUAT_4LED_7DOAN_4SO(0XFF,0XFF,0XFF,BL740);
}

//ham 405
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//CHUONG TRINH CON HIEN THI DU LIEU 16 BIT TREN 4 LED 7 DOAN
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
UNSIGNED CHAR DONVI4,CHUC4,TRAM4,NGAN4;
VOID  XUAT_4LED_7DOAN_GIAIMA_XOA_SO0 (UNSIGNED INT16 TAM)
{         
      DONVI4 = MA7DOAN[TAM %10];         
      CHUC4  = MA7DOAN[TAM/10%10];
      TRAM4  = MA7DOAN[TAM/100%10]; 
      NGAN4  = MA7DOAN[TAM/1000%10];       
      IF (NGAN4==0XC0)
      {
         NGAN4=0XFF;
         IF (TRAM4==0XC0)
         {
            TRAM4=0XFF;
            IF (CHUC4==0XC0)   CHUC4=0XFF;
         }
      }
      XUAT_4LED_7DOAN_4SO(NGAN4,TRAM4,CHUC4,DONVI4);   
}
UNSIGNED INT8 LCDDATA=0; 
UNSIGNED INT8 LCDCONTROL=0;
UNSIGNED INT8 GLCDDATA=0;
UNSIGNED INT8 GLCDCONTROL=0; 
//HAM 701
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//CHUONG TRINH CON XUAT DU LIEU 4 BYTE RA GLCD VA LCD
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID XUAT_GLCD_LCD()
{      
    XUAT_1BYTE(GLCDCONTROL);             
    XUAT_1BYTE(GLCDDATA);
    XUAT_1BYTE(LCDCONTROL);       
    XUAT_1BYTE(LCDDATA);      
      
    MO_GLCD_LCD;
    MO_IC_74573_A_THONG_DL();            
    OUTPUT_HIGH(RCK_LCD20X4);     
    OUTPUT_LOW(RCK_LCD20X4);
    CHOT_IC_74573_A_GOI_DU_LIEU;
}
//HAM 702
VOID XUAT_LCD20X4(UNSIGNED INT8 LCD_SIGNAL,LCD_INS_HTHI)
{     
    LCDCONTROL = ~LCD_SIGNAL;
    LCDDATA    = ~LCD_INS_HTHI;      
    XUAT_GLCD_LCD();
}
//HAM 703
VOID XUAT_GLCD128X64(UNSIGNED INT8 GLCD_SIGNAL,GLCD_INS_HTHI)
{     
    GLCDCONTROL = ~GLCD_SIGNAL;
    GLCDDATA    = ~GLCD_INS_HTHI;     
    XUAT_GLCD_LCD();
}
//HAM 501
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//CHUONG TRINH CON XUAT 2 BYTE RA DK 1 LED QUET SANG
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID XUAT_8LED_7DOAN_QUET_1(UNSIGNED INT MA,SO_HTHI)
{     
      XUAT_1BYTE(~MA);   XUAT_1BYTE(~SO_HTHI);
      
      MO_8_LED_QUET;
      MO_IC_74573_B_THONG_DL();
      
      OUTPUT_HIGH(RCK_8LEDQUET); OUTPUT_LOW(RCK_8LEDQUET);
      CHOT_IC_74573_B_GOI_DU_LIEU;
}
//HAM 502
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//CHUONG TRINH CON XUAT 2 BYTE RA TAT 8 LED QUET
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID XUAT_8LED_7DOAN_QUET_TAT_LED()
{
   XUAT_8LED_7DOAN_QUET_1(0XFF,0XFF);
}
//HAM 503
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//CHUONG TRINH CON HIEN THI LED THEO THU TU
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
CONST UNSIGNED CHAR TTLEDQUET[8]= {0x7F,0xBF,0xDF,0xEF,0xF7,0xFB,0xFD,0xFE};
VOID XUAT_8LED_7DOAN_QUET_2(UNSIGNED INT THUTULED,SO_HTHI)
{         
      XUAT_1BYTE(~ (TTLEDQUET[THUTULED]));   XUAT_1BYTE(~SO_HTHI);     
      MO_8_LED_QUET;
      MO_IC_74573_B_THONG_DL();
      OUTPUT_HIGH(RCK_8LEDQUET); OUTPUT_LOW(RCK_8LEDQUET);
      CHOT_IC_74573_B_GOI_DU_LIEU;
}
//HAM 504
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//CHUONG TRINH CON HIEN THI 8 SO TREN 8 LED QUET - CO KIEM TRA
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
UNSIGNED CHAR LED_7DQ[13]={0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF};
UNSIGNED INT8 TT8LED=0;
VOID HIEN_THI_8LED_7DOAN_QUET()
{     
      FOR(TT8LED=0;TT8LED<8;TT8LED++)
         IF (LED_7DQ[TT8LED]!=0XFF)
         {           
            XUAT_8LED_7DOAN_QUET_2(TT8LED, LED_7DQ[TT8LED]);
            DELAY_US(100);
            XUAT_8LED_7DOAN_QUET_TAT_LED();           
            }
}
//HAM 505
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//CHUONG TRINH CON HIEN THI 8 SO TREN 8 LED QUET - KHONG KIEM TRA
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID HIEN_THI_8LED_7DOAN_QUET_ALL()
{     
      FOR(TT8LED=0;TT8LED<8;TT8LED++)         
         {           
            XUAT_8LED_7DOAN_QUET_2(TT8LED, LED_7DQ[TT8LED]);
            DELAY_US(100);
            XUAT_8LED_7DOAN_QUET_TAT_LED();           
            }
}

VOID DELAY_QUET_8LED(UNSIGNED INT16 DL)
{ 
      UNSIGNED INT8 I;
      FOR (I=0; I<DL;I++)
      HIEN_THI_8LED_7DOAN_QUET_ALL();
} 

VOID GIAI_MA_GAN_CHO_8LED_QUET_16_XOA(UNSIGNED INT16 X)
{     
      LED_7DQ[0]= MA7DOAN [X %10];    
      LED_7DQ[1]= MA7DOAN [X/10%10];
      LED_7DQ[2]= MA7DOAN [X/100%10];    
      LED_7DQ[3]= MA7DOAN [X/1000%10];
      LED_7DQ[4]= MA7DOAN [X/10000%10];
      IF (LED_7DQ[4]==MASO0) 
      {
            LED_7DQ[4]=0XFF;
            IF (LED_7DQ[3]==MASO0) 
            {
               LED_7DQ[3]=0XFF;
               IF (LED_7DQ[2]==MASO0) 
               {
                  LED_7DQ[2]=0XFF;
                  IF (LED_7DQ[1]==MASO0) 
                  {
                     LED_7DQ[1]=0XFF;
                  }
               }
            }
      }
            
}
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX         
VOID XUAT_2BYTE(UNSIGNED INT16 BYTE2XUAT)
{
   INT8 SBB;
   UNSIGNED INT16   XX;   //SHORT  BSERI;
   #BIT BSERIX  = XX.15
   XX = BYTE2XUAT;
   FOR (SBB=0;SBB<16;SBB++)
      {                                                 
         OUTPUT_BIT(SSDO,BSERIX);    
         OUTPUT_LOW(SSCK);         
         OUTPUT_HIGH(SSCK);
         XX= XX<<1;         
     }
}
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//CHUONG TRINH CON XUAT RA LED MA TRAN
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID XUAT_MATRANLED(UNSIGNED INT16 MAHANG,UNSIGNED INT16 MACOT1,
UNSIGNED INT16 MACOT2,UNSIGNED INT16 MACOT3)
{      
      XUAT_2BYTE(MACOT3);
      XUAT_2BYTE(MACOT2);
      XUAT_2BYTE(MACOT1);
      XUAT_2BYTE(MAHANG);
      
      MO_LED_MATRAN;
      MO_IC_74573_B_THONG_DL();
      
      OUTPUT_HIGH(RCK_MATRANLED); OUTPUT_LOW(RCK_MATRANLED); 
      CHOT_IC_74573_B_GOI_DU_LIEU;
}
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//CHUONG TRINH CON XUAT RA LED MA TRAN
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID TAT_MATRANLED()
{      
      XUAT_2BYTE(0);
      XUAT_2BYTE(0);
      XUAT_2BYTE(0);
      XUAT_2BYTE(0);           
      OUTPUT_HIGH(RCK_MATRANLED); 
      OUTPUT_LOW(RCK_MATRANLED);
}
UNSIGNED  INT8 HIEU_CHINH_4BIT_CAO(UNSIGNED INT8 XZY)
{
      INT1  BTG;
      UNSIGNED INT8   BX;   
      #BIT BIT4  = BX.4
      #BIT BIT5  = BX.5
      #BIT BIT6  = BX.6
      #BIT BIT7  = BX.7
      BX=XZY;
      BTG=BIT4;   BIT4=BIT7;  BIT7=BTG;
      BTG=BIT5;   BIT5=BIT6;  BIT6=BTG;      
      RETURN(BX);  
}
//HAM 601
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//MODULE DIEU KHIEN RELAY,TRIAC, BUZZER, DONG CO, SIM
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID XUAT_BUZZER_RELAY()
{     
   UNSIGNED INT8 RBDC1,RBDC2;
      RBDC1=RBDC; RBDC2=RBDC>>8;      
      XUAT_1BYTE(RBDC2);      
      XUAT_1BYTE(RBDC1);
      MO_RELAY_BUZZER_DC;
      MO_IC_74573_B_THONG_DL();
      
      OUTPUT_HIGH(RCK_BUZERELAY);   OUTPUT_LOW(RCK_BUZERELAY);
      CHOT_IC_74573_B_GOI_DU_LIEU;
}
//HAM 602
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID BUZZER_ON()
{    
      BUZZER=1;
      XUAT_BUZZER_RELAY();         
}
//HAM 603
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID BUZZER_OFF()
{     
      BUZZER=0;
      XUAT_BUZZER_RELAY();
}
//HAM 604
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID RELAY_1_ON()
{    
      RELAY_1=1;
      XUAT_BUZZER_RELAY();         
}
//HAM 603
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID RELAY_1_OFF()
{    
      RELAY_1=0;
      XUAT_BUZZER_RELAY();         
}
//HAM 604
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID RELAY_2_ON()
{    
      RELAY_2=1;
      XUAT_BUZZER_RELAY();         
}
//HAM 607
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID RELAY_2_OFF()
{    
      RELAY_2=0;
      XUAT_BUZZER_RELAY();         
}
//HAM 608
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID RELAY_1_RELAY_2_ON()
{    
      RELAY_1=1;  RELAY_2=1;
      XUAT_BUZZER_RELAY();         
}
//HAM 609
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID RELAY_1_RELAY_2_OFF()
{    
      RELAY_1=0;  RELAY_2=0;
      XUAT_BUZZER_RELAY();         
}
//HAM 610
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID TRIAC_1_ON()
{    
      TRIAC_1=1;
      XUAT_BUZZER_RELAY();         
}
//HAM 611
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID TRIAC_1_OFF()
{    
      TRIAC_1=0;
      XUAT_BUZZER_RELAY();         
}
//HAM 612
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID TRIAC_2_ON()
{    
      TRIAC_2=1;
      XUAT_BUZZER_RELAY();         
}
//HAM 613
//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
VOID TRIAC_2_OFF()
{    
      TRIAC_2=0;
      XUAT_BUZZER_RELAY();         
}

//xxxxxxxxxxxxxxxxxxxxxxxxxxxx Chong doi nut nhan don xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
int1 inputcd(int16 pin)
{
      int8 n;
      static int16 oldpin=0xffff;
      static int1 tt=0;
      static int1 dem=0;
      if((input(pin)==0)&&(dem==0))
       {
         if(tt==0) {oldpin = pin;tt=1;}
         if(pin==oldpin) 
          {
           for(n=0;n<5;n++)hien_thi_8led_7doan_quet_all();
           dem=1;
           return 0;
          }
      }
      else if(input(pin)&&dem)
      {
          if(pin==oldpin)
          {   
              for(n=0;n<5;n++)hien_thi_8led_7doan_quet_all();
              if(input(pin))
              {
                 tt=0; 
                 dem=0;
                 oldpin=0xffff;
              }
          }
      }
      return 1; 
}
//xxxxxxxxxxxxxxxxxxxxx SOFT I2C xxxxxxxxxxxxxxxxxxxxxxxxx
void soft_i2c_clk()
{    
      output_high(soft_i2c_scl);
      output_low(soft_i2c_scl);
}
void soft_i2c_start()
{
      output_high(soft_i2c_sda);
      output_high(soft_i2c_scl);
      output_low(soft_i2c_sda);
      output_low(soft_i2c_scl);      
}
void soft_i2c_stop()
{
      output_low(soft_i2c_scl);
      output_low(soft_i2c_sda);
      output_high(soft_i2c_scl);
      output_high(soft_i2c_sda);
}
result soft_i2c_write(unsigned int8 b)
{
      unsigned int8 m,dem=0;
      for(m=0x80;m>0;m>>=1)
      {
            output_bit(soft_i2c_sda,b&m);
            soft_i2c_clk();
      }
     output_float(soft_i2c_sda);
     output_high(soft_i2c_scl);
     while(input(soft_i2c_sda)&(dem<5)){dem++; delay_us(1);}
     output_low(soft_i2c_scl);
     if(dem==5) return ERR;
     else        return OK;
}

unsigned int8 soft_i2c_read(int1 ack)
{ 
      unsigned int8 n,nhan=0;
      output_float(soft_i2c_sda);
      for(n=0x80;n>0;n>>=1)
      {    
            output_high(soft_i2c_scl);  
            if(input(soft_i2c_sda))nhan=nhan|n; 
            output_low(soft_i2c_scl);  
      } 
      output_bit(soft_i2c_sda,!ack);
      soft_i2c_clk();
      return nhan;
}
#endif
 
